{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute() {\n  _s();\n  const {\n    isLoggedIn,\n    loading\n  } = useAuth();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-screen\",\n    children: \"Checking auth...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 23\n  }, this);\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 36\n  }, this);\n}\n_s(ProtectedRoute, \"l/HAJYct1YGiLMtDBy6oc9cGgZ0=\", true);\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["ProtectedRoute","_s","isLoggedIn","loading","useAuth","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Outlet","Navigate","to","replace","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/ProtectedRoute.js"],"sourcesContent":["export default function ProtectedRoute() {\r\n  const { isLoggedIn, loading } = useAuth();\r\n\r\n  if (loading) return <div className=\"loading-screen\">Checking auth...</div>;\r\n\r\n  return isLoggedIn ? <Outlet /> : <Navigate to=\"/\" replace />;\r\n}"],"mappings":";;;AAAA,eAAe,SAASA,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGC,OAAO,CAAC,CAAC;EAEzC,IAAID,OAAO,EAAE,oBAAOE,OAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1E,OAAOT,UAAU,gBAAGG,OAAA,CAACO,MAAM;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGN,OAAA,CAACQ,QAAQ;IAACC,EAAE,EAAC,GAAG;IAACC,OAAO;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D;AAACV,EAAA,CANuBD,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}