{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Movies.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useAuth } from './authContext';\nimport React, { useEffect, useState, useRef } from 'react';\nimport Header from './Header';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction Movies() {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  // Sync selectedMovie with URL state\n  React.useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const play = params.get('play');\n    const folder = params.get('folder');\n    if (play && folder) {\n      // Only set if different\n      if (!selectedMovie || selectedMovie.filename !== play || selectedMovie.folder !== folder) {\n        setSelectedMovie({\n          filename: play,\n          folder\n        });\n      }\n    } else if (selectedMovie) {\n      setSelectedMovie(null);\n    }\n  }, [location.search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: \"Movies\",\n          selectedMovie: selectedMovie,\n          setSelectedMovie: movie => {\n            setSelectedMovie({\n              filename: movie.filename,\n              folder: movie.folder\n            });\n            navigate(`?play=${encodeURIComponent(movie.filename)}&folder=${encodeURIComponent(movie.folder)}`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), selectedMovie && /*#__PURE__*/_jsxDEV(VideoOverlay, {\n        filename: selectedMovie.filename,\n        folder: selectedMovie.folder,\n        onClose: () => {\n          setSelectedMovie(null);\n          navigate(-1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Movies, \"gNOtIbpTtbddMIIcinP7Xig6TZ4=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = Movies;\nfunction MovieRow({\n  title,\n  setSelectedMovie\n}) {\n  _s2();\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const metadataCache = useRef({});\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await fetch(`${API_URL}/api/movies`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const movieList = await res.json();\n        const metadataPromises = movieList.map(async ({\n          filename,\n          title,\n          folder\n        }) => {\n          if (metadataCache.current[title]) {\n            return {\n              filename,\n              folder,\n              ...metadataCache.current[title]\n            };\n          }\n          const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(title)}`);\n          const metaData = await metaRes.json();\n          const metadata = {\n            title: metaData.Title || title,\n            poster: metaData.Poster && metaData.Poster !== 'N/A' ? metaData.Poster : null,\n            imdbRating: metaData.imdbRating || 'N/A',\n            genre: metaData.Genre || ''\n          };\n          metadataCache.current[title] = metadata;\n          return {\n            filename,\n            folder,\n            ...metadata\n          };\n        });\n        const movieWithMetadata = await Promise.all(metadataPromises);\n        setMovies(movieWithMetadata);\n      } catch (err) {\n        console.error('Error fetching movies or metadata:', err);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // Unique genre list\n  const genres = Array.from(new Set(movies.flatMap(m => {\n    var _m$genre;\n    return (_m$genre = m.genre) === null || _m$genre === void 0 ? void 0 : _m$genre.split(', ').filter(Boolean);\n  })));\n\n  // Combined filter logic\n  const filteredMovies = movies.filter(movie => {\n    var _movie$title, _movie$genre, _movie$genre2;\n    const matchesSearch = ((_movie$title = movie.title) === null || _movie$title === void 0 ? void 0 : _movie$title.toLowerCase().includes(searchTerm.toLowerCase())) || ((_movie$genre = movie.genre) === null || _movie$genre === void 0 ? void 0 : _movie$genre.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesGenre = selectedGenre ? (_movie$genre2 = movie.genre) === null || _movie$genre2 === void 0 ? void 0 : _movie$genre2.includes(selectedGenre) : true;\n    return matchesSearch && matchesGenre;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msTitel\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sokDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search movie titles\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"msSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centreraCards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGenre(''),\n            className: !selectedGenre ? 'active' : '',\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGenre(genre),\n            className: selectedGenre === genre ? 'active' : '',\n            children: genre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centreraCards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: filteredMovies.map((movie, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => {\n            setSelectedMovie({\n              filename: movie.filename,\n              folder: movie.folder\n            });\n            navigate(`?play=${encodeURIComponent(movie.filename)}&folder=${encodeURIComponent(movie.folder)}`);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover-area\",\n            children: [movie.poster && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${API_URL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movieTitle\",\n              children: [movie.title, \" \\u2B50\", movie.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)\n        }, `${title}-${movie.filename}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n// Video Overlay\n_s2(MovieRow, \"BOcnzBlB+KKvaDxVMWbqC9jrGvc=\", false, function () {\n  return [useNavigate];\n});\n_c2 = MovieRow;\nfunction VideoOverlay({\n  folder,\n  filename,\n  onClose\n}) {\n  _s3();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const videoUrl = `${API_URL}/api/stream/movie/${encodeURIComponent(folder)}/${encodeURIComponent(filename)}?token=${token}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: () => {\n          onClose(); // clear the state\n        },\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        autoPlay: true,\n        className: \"video-player\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n}\n_s3(VideoOverlay, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c3 = VideoOverlay;\nexport default Movies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"MovieRow\");\n$RefreshReg$(_c3, \"VideoOverlay\");","map":{"version":3,"names":["useAuth","React","useEffect","useState","useRef","Header","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","Movies","_s","isLoggedIn","navigate","location","selectedMovie","setSelectedMovie","params","URLSearchParams","search","play","get","folder","filename","children","fileName","_jsxFileName","lineNumber","columnNumber","className","MovieRow","title","movie","encodeURIComponent","VideoOverlay","onClose","_c","_s2","movies","setMovies","searchTerm","setSearchTerm","selectedGenre","setSelectedGenre","metadataCache","fetchMovies","token","localStorage","getItem","res","fetch","headers","Authorization","movieList","json","metadataPromises","map","current","metaRes","metaData","metadata","Title","poster","Poster","imdbRating","genre","Genre","movieWithMetadata","Promise","all","err","console","error","genres","Array","from","Set","flatMap","m","_m$genre","split","filter","Boolean","filteredMovies","_movie$title","_movie$genre","_movie$genre2","matchesSearch","toLowerCase","includes","matchesGenre","type","placeholder","value","onChange","e","target","onClick","index","idx","src","alt","_c2","_s3","videoUrl","controls","autoPlay","_c3","$RefreshReg$"],"sources":["D:/Erkflix/src/Movies.js"],"sourcesContent":["import { useAuth } from './authContext';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport Header from './Header';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction Movies() {\r\n    const { isLoggedIn } = useAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n    // Sync selectedMovie with URL state\r\n    React.useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const play = params.get('play');\r\n        const folder = params.get('folder');\r\n\r\n        if (play && folder) {\r\n            // Only set if different\r\n            if (!selectedMovie || selectedMovie.filename !== play || selectedMovie.folder !== folder) {\r\n                setSelectedMovie({ filename: play, folder });\r\n            }\r\n        } else if (selectedMovie) {\r\n            setSelectedMovie(null);\r\n        }\r\n    }, [location.search]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className='mainDiv'>\r\n                {isLoggedIn && (\r\n                    <>\r\n                        <MovieRow\r\n                            title=\"Movies\"\r\n                            selectedMovie={selectedMovie}\r\n                            setSelectedMovie={(movie) => {\r\n                                setSelectedMovie({ filename: movie.filename, folder: movie.folder });\r\n                                navigate(`?play=${encodeURIComponent(movie.filename)}&folder=${encodeURIComponent(movie.folder)}`);\r\n                            }}\r\n                        />\r\n\r\n                    </>\r\n                )}\r\n                {selectedMovie && (\r\n                    <VideoOverlay\r\n                        filename={selectedMovie.filename}\r\n                        folder={selectedMovie.folder}\r\n                        onClose={() => {\r\n                            setSelectedMovie(null);\r\n                            navigate(-1);\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction MovieRow({ title, setSelectedMovie }) {\r\n    const navigate = useNavigate();\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedGenre, setSelectedGenre] = useState('');\r\n    const metadataCache = useRef({});\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/movies`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n\r\n                const movieList = await res.json();\r\n\r\n                const metadataPromises = movieList.map(async ({ filename, title, folder }) => {\r\n                    if (metadataCache.current[title]) {\r\n                        return {\r\n                            filename,\r\n                            folder,\r\n                            ...metadataCache.current[title],\r\n                        };\r\n                    }\r\n\r\n                    const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(title)}`);\r\n                    const metaData = await metaRes.json();\r\n\r\n                    const metadata = {\r\n                        title: metaData.Title || title,\r\n                        poster: metaData.Poster && metaData.Poster !== 'N/A' ? metaData.Poster : null,\r\n                        imdbRating: metaData.imdbRating || 'N/A',\r\n                        genre: metaData.Genre || '',\r\n                    };\r\n\r\n                    metadataCache.current[title] = metadata;\r\n\r\n                    return {\r\n                        filename,\r\n                        folder,\r\n                        ...metadata,\r\n                    };\r\n                });\r\n\r\n                const movieWithMetadata = await Promise.all(metadataPromises);\r\n                setMovies(movieWithMetadata);\r\n            } catch (err) {\r\n                console.error('Error fetching movies or metadata:', err);\r\n            }\r\n        };\r\n\r\n        fetchMovies();\r\n    }, []);\r\n\r\n    // Unique genre list\r\n    const genres = Array.from(\r\n        new Set(movies.flatMap((m) => m.genre?.split(', ').filter(Boolean)))\r\n    );\r\n\r\n    // Combined filter logic\r\n    const filteredMovies = movies.filter((movie) => {\r\n        const matchesSearch =\r\n            movie.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            movie.genre?.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n        const matchesGenre = selectedGenre\r\n            ? movie.genre?.includes(selectedGenre)\r\n            : true;\r\n\r\n        return matchesSearch && matchesGenre;\r\n    });\r\n\r\n    return (\r\n        <div className=\"movie-row\">\r\n            <h3 className=\"msTitel\">{title}</h3>\r\n            {/* Search */}\r\n            <div className='searchBox'>\r\n                <div className=\"sokDiv\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search movie titles\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"msSearch\"\r\n                    />\r\n                </div>\r\n                {/* Genre Buttons */}\r\n                <div className=\"centreraCards\">\r\n                    <div className=\"genre-buttons\">\r\n                        <button\r\n                            onClick={() => setSelectedGenre('')}\r\n                            className={!selectedGenre ? 'active' : ''}\r\n                        >\r\n                            All\r\n                        </button>\r\n                        {genres.map((genre, index) => (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => setSelectedGenre(genre)}\r\n                                className={selectedGenre === genre ? 'active' : ''}\r\n                            >\r\n                                {genre}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Movie Cards */}\r\n            <div className='centreraCards'>\r\n                <div className=\"cards\">\r\n                    {filteredMovies.map((movie, idx) => (\r\n                        <div\r\n                            className=\"movie-card\"\r\n                            key={`${title}-${movie.filename}`}\r\n                            onClick={() => {\r\n                                setSelectedMovie({ filename: movie.filename, folder: movie.folder });\r\n                                navigate(`?play=${encodeURIComponent(movie.filename)}&folder=${encodeURIComponent(movie.folder)}`);\r\n                            }}\r\n                        >\r\n                            <div className=\"hover-area\">\r\n                                {movie.poster && (\r\n                                    <img src={`${API_URL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`} alt={movie.title} />\r\n                                )}\r\n                                <span className=\"movieTitle\">\r\n                                    {movie.title} ⭐{movie.imdbRating}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Video Overlay\r\nfunction VideoOverlay({ folder, filename, onClose }) {\r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const videoUrl = `${API_URL}/api/stream/movie/${encodeURIComponent(folder)}/${encodeURIComponent(filename)}?token=${token}`;\r\n\r\n    return (\r\n        <div className=\"video-overlay\">\r\n            <div className=\"video-wrapper\">\r\n                <button\r\n                    className=\"close-button\"\r\n                    onClick={() => {\r\n                        onClose(); // clear the state\r\n                    }}\r\n                >\r\n                    ✖\r\n                </button>\r\n                <video\r\n                    controls\r\n                    autoPlay\r\n                    className=\"video-player\"\r\n                >\r\n                    <source src={videoUrl} type=\"video/mp4\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}