{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Frontend\\\\Watch.js\",\n  _s = $RefreshSig$();\n// src/components/Watch.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport api from '../Api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Watch() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const path = searchParams.get('path');\n  const movieFolder = searchParams.get('movie');\n  const navigate = useNavigate();\n  const [metadata, setMetadata] = useState(null);\n  const metadataCache = useRef({});\n\n  // Fetch movie or series metadata\n  useEffect(() => {\n    if (!path && !movieFolder) return;\n    const fetchMetadata = async () => {\n      try {\n        if (movieFolder) {\n          const res = await api.get(`/api/movie-metadata/${encodeURIComponent(movieFolder)}`);\n          setMetadata(res.data);\n          metadataCache.current[res.data.Title] = {\n            genre: res.data.Genre || ''\n          };\n        }\n      } catch (err) {\n        console.error('❌ Failed to fetch metadata:', err);\n      }\n    };\n    fetchMetadata();\n  }, [movieFolder, path]);\n  const getVideoUrl = () => {\n    if (path) {\n      return `${api.defaults.baseURL}/api/stream/file?path=${encodeURIComponent(path)}`;\n    }\n    if (movieFolder && metadata !== null && metadata !== void 0 && metadata.filename) {\n      return `${api.defaults.baseURL}/api/stream/movie/${encodeURIComponent(movieFolder)}/${encodeURIComponent(metadata.filename)}`;\n    }\n    return '';\n  };\n  const title = (metadata === null || metadata === void 0 ? void 0 : metadata.Title) || path || movieFolder;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => navigate(-1),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          autoPlay: true,\n          className: \"video-player\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: getVideoUrl(),\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Watch, \"mrcQV1A55PmEqjx0+MgklVfWUX8=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useSearchParams","useNavigate","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Watch","_s","searchParams","path","get","movieFolder","navigate","metadata","setMetadata","metadataCache","fetchMetadata","res","encodeURIComponent","data","current","Title","genre","Genre","err","console","error","getVideoUrl","defaults","baseURL","filename","title","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","controls","autoPlay","src","type","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/Frontend/Watch.js"],"sourcesContent":["// src/components/Watch.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport api from '../Api';\r\n\r\nexport default function Watch() {\r\n  const [searchParams] = useSearchParams();\r\n  const path = searchParams.get('path');\r\n  const movieFolder = searchParams.get('movie');\r\n  const navigate = useNavigate();\r\n\r\n  const [metadata, setMetadata] = useState(null);\r\n  const metadataCache = useRef({});\r\n\r\n  // Fetch movie or series metadata\r\n  useEffect(() => {\r\n    if (!path && !movieFolder) return;\r\n\r\n    const fetchMetadata = async () => {\r\n      try {\r\n        if (movieFolder) {\r\n          const res = await api.get(`/api/movie-metadata/${encodeURIComponent(movieFolder)}`);\r\n          setMetadata(res.data);\r\n          metadataCache.current[res.data.Title] = { genre: res.data.Genre || '' };\r\n        }\r\n      } catch (err) {\r\n        console.error('❌ Failed to fetch metadata:', err);\r\n      }\r\n    };\r\n\r\n    fetchMetadata();\r\n  }, [movieFolder, path]);\r\n\r\n  const getVideoUrl = () => {\r\n    if (path) {\r\n      return `${api.defaults.baseURL}/api/stream/file?path=${encodeURIComponent(path)}`;\r\n    }\r\n    if (movieFolder && metadata?.filename) {\r\n      return `${api.defaults.baseURL}/api/stream/movie/${encodeURIComponent(movieFolder)}/${encodeURIComponent(metadata.filename)}`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const title = metadata?.Title || path || movieFolder;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mainDiv\">\r\n        <div className=\"video-wrapper\">\r\n          <button className=\"close-button\" onClick={() => navigate(-1)}>✖</button>\r\n          <video controls autoPlay className=\"video-player\">\r\n            <source src={getVideoUrl()} type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}