{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Frontend\\\\Watch.js\",\n  _s = $RefreshSig$();\n// src/components/Watch.js\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport api from '../Api';\nimport { useAuth } from '../authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Watch() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const path = searchParams.get('path');\n  const movieFolder = searchParams.get('movie');\n  const navigate = useNavigate();\n  const {\n    accessToken\n  } = useAuth();\n  const [metadata, setMetadata] = useState(null);\n  useEffect(() => {\n    if (movieFolder) {\n      const fetchMetadata = async () => {\n        try {\n          const res = await api.get(`/api/movie-metadata/${encodeURIComponent(movieFolder)}`);\n          setMetadata(res.data);\n        } catch (err) {\n          console.error('❌ Failed to load movie metadata:', err);\n        }\n      };\n      fetchMetadata();\n    }\n  }, [movieFolder]);\n  const videoUrl = (() => {\n    if (path && accessToken) {\n      return `${api.defaults.baseURL}/api/stream/file?path=${encodeURIComponent(path)}&token=${accessToken}`;\n    }\n    if (movieFolder && metadata !== null && metadata !== void 0 && metadata.filename && accessToken) {\n      return `${api.defaults.baseURL}/api/stream/movie/${encodeURIComponent(movieFolder)}/${encodeURIComponent(metadata.filename)}?token=${accessToken}`;\n    }\n    return null;\n  })();\n  const subtitleUrl = (() => {\n    if (path) {\n      const vttPath = path.replace(/\\.[^.]+$/, '.vtt'); // change .mp4 to .vtt\n      return `${api.defaults.baseURL}/media/Series/${encodeURIComponent(vttPath)}`;\n    }\n    if (movieFolder && metadata !== null && metadata !== void 0 && metadata.filename) {\n      const vttPath = `${movieFolder}/${metadata.filename}`.replace(/\\.[^.]+$/, '.vtt');\n      return `${api.defaults.baseURL}/media/Movies/${encodeURIComponent(vttPath)}`;\n    }\n    return null;\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: () => navigate(-1),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), videoUrl ? /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        autoPlay: true,\n        className: \"video-player\",\n        crossOrigin: \"anonymous\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), subtitleUrl && /*#__PURE__*/_jsxDEV(\"track\", {\n          label: \"English\",\n          kind: \"subtitles\",\n          srcLang: \"en\",\n          src: subtitleUrl,\n          default: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Watch, \"kC8TssB6DzTcijnoxihbpeGzOJs=\", false, function () {\n  return [useSearchParams, useNavigate, useAuth];\n});\n_c = Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","useNavigate","api","useAuth","jsxDEV","_jsxDEV","Watch","_s","searchParams","path","get","movieFolder","navigate","accessToken","metadata","setMetadata","fetchMetadata","res","encodeURIComponent","data","err","console","error","videoUrl","defaults","baseURL","filename","subtitleUrl","vttPath","replace","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","controls","autoPlay","crossOrigin","src","type","label","kind","srcLang","default","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/Frontend/Watch.js"],"sourcesContent":["// src/components/Watch.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport api from '../Api';\r\nimport { useAuth } from '../authContext';\r\n\r\nexport default function Watch() {\r\n    const [searchParams] = useSearchParams();\r\n    const path = searchParams.get('path');\r\n    const movieFolder = searchParams.get('movie');\r\n    const navigate = useNavigate();\r\n    const { accessToken } = useAuth();\r\n\r\n    const [metadata, setMetadata] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (movieFolder) {\r\n            const fetchMetadata = async () => {\r\n                try {\r\n                    const res = await api.get(`/api/movie-metadata/${encodeURIComponent(movieFolder)}`);\r\n                    setMetadata(res.data);\r\n                } catch (err) {\r\n                    console.error('❌ Failed to load movie metadata:', err);\r\n                }\r\n            };\r\n            fetchMetadata();\r\n        }\r\n    }, [movieFolder]);\r\n\r\n    const videoUrl = (() => {\r\n        if (path && accessToken) {\r\n            return `${api.defaults.baseURL}/api/stream/file?path=${encodeURIComponent(path)}&token=${accessToken}`;\r\n        }\r\n\r\n        if (movieFolder && metadata?.filename && accessToken) {\r\n            return `${api.defaults.baseURL}/api/stream/movie/${encodeURIComponent(movieFolder)}/${encodeURIComponent(metadata.filename)}?token=${accessToken}`;\r\n        }\r\n\r\n        return null;\r\n    })();\r\n\r\n    const subtitleUrl = (() => {\r\n        if (path) {\r\n            const vttPath = path.replace(/\\.[^.]+$/, '.vtt'); // change .mp4 to .vtt\r\n            return `${api.defaults.baseURL}/media/Series/${encodeURIComponent(vttPath)}`;\r\n        }\r\n\r\n        if (movieFolder && metadata?.filename) {\r\n            const vttPath = `${movieFolder}/${metadata.filename}`.replace(/\\.[^.]+$/, '.vtt');\r\n            return `${api.defaults.baseURL}/media/Movies/${encodeURIComponent(vttPath)}`;\r\n        }\r\n\r\n        return null;\r\n    })();\r\n\r\n    return (\r\n        <div className=\"video-overlay\">\r\n            <div className=\"video-wrapper\">\r\n                <button className=\"close-button\" onClick={() => navigate(-1)}>✖</button>\r\n                {videoUrl ? (\r\n                    <video controls autoPlay className=\"video-player\" crossOrigin=\"anonymous\">\r\n                        <source src={videoUrl} type=\"video/mp4\" />\r\n                        {subtitleUrl && (\r\n                            <track\r\n                                label=\"English\"\r\n                                kind=\"subtitles\"\r\n                                srcLang=\"en\"\r\n                                src={subtitleUrl}\r\n                                default\r\n                            />\r\n                        )}\r\n                        Your browser does not support the video tag.\r\n                    </video>\r\n                ) : (\r\n                    <p>Loading video...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}