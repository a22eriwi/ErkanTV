{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\recentlyAddedRow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction RecentlyAddedRow({\n  setSelectedMovie\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRecent = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await fetch(`${API_URL}/api/recent-content`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        const enriched = await Promise.all(data.map(async item => {\n          const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(item.title)}`);\n          const meta = await metaRes.json();\n          return {\n            ...item,\n            title: meta.Title || item.title,\n            poster: meta.Poster && meta.Poster !== 'N/A' ? meta.Poster : null,\n            imdbRating: meta.imdbRating || 'N/A',\n            genre: meta.Genre || ''\n          };\n        }));\n        setItems(enriched);\n      } catch (err) {\n        console.error('Failed to load recent items:', err);\n      }\n    };\n    fetchRecent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recently Added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centreraCards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => {\n            if (item.type === 'movie') {\n              setSelectedMovie({\n                filename: item.fileName\n              });\n            } else {\n              navigate(`/series?name=${encodeURIComponent(item.seriesName)}`);\n            }\n          },\n          children: [item.poster && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.poster,\n            alt: item.title,\n            className: \"movie-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movieTitle\",\n            children: [item.title, \" \\u2B50\", item.imdbRating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, `${item.type}-${item.title}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(RecentlyAddedRow, \"K4zs12HydVpcriwJbXPqsjCjNz0=\", false, function () {\n  return [useNavigate];\n});\n_c = RecentlyAddedRow;\nexport default RecentlyAddedRow;\nvar _c;\n$RefreshReg$(_c, \"RecentlyAddedRow\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","RecentlyAddedRow","setSelectedMovie","_s","items","setItems","navigate","fetchRecent","token","localStorage","getItem","res","fetch","headers","Authorization","data","json","enriched","Promise","all","map","item","metaRes","encodeURIComponent","title","meta","Title","poster","Poster","imdbRating","genre","Genre","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","filename","seriesName","src","alt","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/recentlyAddedRow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction RecentlyAddedRow({ setSelectedMovie }) {\r\n    const [items, setItems] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchRecent = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/recent-content`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                const data = await res.json();\r\n\r\n                const enriched = await Promise.all(data.map(async (item) => {\r\n                    const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(item.title)}`);\r\n                    const meta = await metaRes.json();\r\n\r\n                    return {\r\n                        ...item,\r\n                        title: meta.Title || item.title,\r\n                        poster: meta.Poster && meta.Poster !== 'N/A' ? meta.Poster : null,\r\n                        imdbRating: meta.imdbRating || 'N/A',\r\n                        genre: meta.Genre || '',\r\n                    };\r\n                }));\r\n\r\n                setItems(enriched);\r\n            } catch (err) {\r\n                console.error('Failed to load recent items:', err);\r\n            }\r\n        };\r\n\r\n        fetchRecent();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"movie-row\">\r\n            <h3>Recently Added</h3>\r\n            <div className='centreraCards'>\r\n                <div className=\"cards\">\r\n                    {items.map(item => (\r\n                        <div\r\n                            key={`${item.type}-${item.title}`}\r\n                            className=\"movie-card\"\r\n                            onClick={() => {\r\n                                if (item.type === 'movie') {\r\n                                    setSelectedMovie({ filename: item.fileName });\r\n                                } else {\r\n                                    navigate(`/series?name=${encodeURIComponent(item.seriesName)}`);\r\n                                }\r\n                            }}\r\n                        >\r\n                            {item.poster && (\r\n                                <img src={item.poster} alt={item.title} className=\"movie-poster\" />\r\n                            )}\r\n                            <span className='movieTitle'>{item.title} ‚≠ê{item.imdbRating}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentlyAddedRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}