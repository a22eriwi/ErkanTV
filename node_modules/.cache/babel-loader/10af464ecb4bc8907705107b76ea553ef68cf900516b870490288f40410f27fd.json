{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Components\\\\MovieRow.js\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/components/MovieRow.js\nimport { useAuth } from '../authContext';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../Api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RenderMovieRow() {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  if (!isLoggedIn) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn && /*#__PURE__*/_jsxDEV(MovieRow, {\n      title: \"Most watched movies\",\n      topPicks: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n}\n_s(RenderMovieRow, \"Jbx0LrCfdz/EDenJV2YbpvzQ6CY=\", false, function () {\n  return [useAuth];\n});\n_c = RenderMovieRow;\nfunction MovieRow({\n  title,\n  topPicks = false\n}) {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const [movies, setMovies] = useState([]);\n  const metadataCache = useRef({});\n  const navigate = useNavigate();\n  _s2(useEffect(_s2(() => {\n    _s2();\n    const {\n      isLoggedIn\n    } = useAuth();\n    if (!isLoggedIn) return null;\n    const fetchMovies = async () => {\n      try {\n        let movieList = [];\n        if (topPicks) {\n          const res = await api.get('/api/top-picks'); //\n          movieList = res.data;\n        } else {\n          const res = await api.get('/api/movies');\n          movieList = res.data;\n        }\n        const metadataPromises = movieList.map(async ({\n          filename,\n          title,\n          folder\n        }) => {\n          if (metadataCache.current[title]) {\n            return {\n              filename,\n              folder,\n              ...metadataCache.current[title]\n            };\n          }\n          const metaRes = await api.get(`/api/metadata/${encodeURIComponent(title)}`);\n          const metaData = metaRes.data;\n          const metadata = {\n            title: metaData.Title || title,\n            poster: metaData.Poster && metaData.Poster !== 'N/A' ? metaData.Poster : null,\n            imdbRating: metaData.imdbRating || 'N/A',\n            genre: metaData.Genre || ''\n          };\n          metadataCache.current[title] = metadata;\n          return {\n            filename,\n            folder,\n            ...metadata\n          };\n        });\n        const movieWithMetadata = await Promise.all(metadataPromises);\n        setMovies(movieWithMetadata);\n      } catch (err) {\n        console.error('Error fetching movies or metadata:', err);\n      }\n    };\n    fetchMovies();\n  }, \"Jbx0LrCfdz/EDenJV2YbpvzQ6CY=\", false, function () {\n    return [useAuth];\n  }), [topPicks]), \"Jbx0LrCfdz/EDenJV2YbpvzQ6CY=\", false, function () {\n    return [useAuth];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centreraCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        id: \"homeCards\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => navigate(`/movies/${encodeURIComponent(movie.folder)}`),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover-area\",\n            children: movie.poster && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${api.defaults.baseURL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, `${title}-${movie.filename}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s3(MovieRow, \"6jyOSc518v5t++p9k5zUomSZl2Y=\", false, function () {\n  return [useNavigate];\n});\n_c2 = MovieRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderMovieRow\");\n$RefreshReg$(_c2, \"MovieRow\");","map":{"version":3,"names":["useAuth","React","useEffect","useState","useRef","useNavigate","api","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderMovieRow","_s","isLoggedIn","children","MovieRow","title","topPicks","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s3","_s2","$RefreshSig$","movies","setMovies","metadataCache","navigate","fetchMovies","movieList","res","get","data","metadataPromises","map","filename","folder","current","metaRes","encodeURIComponent","metaData","metadata","Title","poster","Poster","imdbRating","genre","Genre","movieWithMetadata","Promise","all","err","console","error","className","id","movie","onClick","src","defaults","baseURL","alt","_c2","$RefreshReg$"],"sources":["D:/Erkflix/src/Components/MovieRow.js"],"sourcesContent":["// src/components/MovieRow.js\r\nimport { useAuth } from '../authContext';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../Api';\r\n\r\nexport default function RenderMovieRow() {\r\n  const { isLoggedIn } = useAuth();\r\n  if (!isLoggedIn) return null;\r\n  return (\r\n    <>\r\n      {isLoggedIn && <MovieRow   title=\"Most watched movies\" topPicks={true}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MovieRow({ title, topPicks = false }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const metadataCache = useRef({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n       const { isLoggedIn } = useAuth();\r\n      if (!isLoggedIn) return null;\r\n    const fetchMovies = async () => {\r\n      try {\r\n        let movieList = [];\r\n\r\n        if (topPicks) {\r\n          const res = await api.get('/api/top-picks'); //\r\n          movieList = res.data;\r\n        } else {\r\n          const res = await api.get('/api/movies');\r\n          movieList = res.data;\r\n        }\r\n\r\n        const metadataPromises = movieList.map(async ({ filename, title, folder }) => {\r\n          if (metadataCache.current[title]) {\r\n            return {\r\n              filename,\r\n              folder,\r\n              ...metadataCache.current[title],\r\n            };\r\n          }\r\n\r\n          const metaRes = await api.get(`/api/metadata/${encodeURIComponent(title)}`);\r\n          const metaData = metaRes.data;\r\n\r\n          const metadata = {\r\n            title: metaData.Title || title,\r\n            poster: metaData.Poster && metaData.Poster !== 'N/A' ? metaData.Poster : null,\r\n            imdbRating: metaData.imdbRating || 'N/A',\r\n            genre: metaData.Genre || '',\r\n          };\r\n\r\n          metadataCache.current[title] = metadata;\r\n\r\n          return {\r\n            filename,\r\n            folder,\r\n            ...metadata,\r\n          };\r\n        });\r\n\r\n        const movieWithMetadata = await Promise.all(metadataPromises);\r\n        setMovies(movieWithMetadata);\r\n      } catch (err) {\r\n        console.error('Error fetching movies or metadata:', err);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, [topPicks]);\r\n\r\n  return (\r\n    <div className='centreraCards'>\r\n      <div className='homeComponent'>\r\n        <h3>{title}</h3>\r\n        <div className=\"cards\" id='homeCards'>\r\n          {movies.map((movie) => (\r\n            <div\r\n              className=\"movie-card\"\r\n              key={`${title}-${movie.filename}`}\r\n              onClick={() => navigate(`/movies/${encodeURIComponent(movie.folder)}`)}\r\n            >\r\n              <div className=\"hover-area\">\r\n                {movie.poster && (\r\n                  <img\r\n                    src={`${api.defaults.baseURL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`}\r\n                    alt={movie.title}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}