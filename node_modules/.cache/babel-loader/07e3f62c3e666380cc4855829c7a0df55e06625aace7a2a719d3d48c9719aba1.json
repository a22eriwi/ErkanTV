{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\recentlyAddedRow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction RecentlyAddedRow({\n  setSelectedMovie\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  const navigate = useNavigate();\n  const metadataCache = useRef({});\n  useEffect(() => {\n    const fetchRecent = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await fetch(`${API_URL}/api/recent-content`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        const enriched = await Promise.all(data.map(async item => {\n          const cacheKey = item.title;\n          if (metadataCache.current[cacheKey]) {\n            return {\n              ...item,\n              ...metadataCache.current[cacheKey]\n            };\n          }\n          const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(cacheKey)}`);\n          const meta = await metaRes.json();\n          const metadata = {\n            title: meta.Title || item.title,\n            poster: meta.Poster && meta.Poster !== 'N/A' ? meta.Poster : null,\n            imdbRating: meta.imdbRating || 'N/A',\n            genre: meta.Genre || ''\n          };\n          metadataCache.current[cacheKey] = metadata;\n          return {\n            ...item,\n            ...metadata\n          };\n        }));\n        setItems(enriched);\n      } catch (err) {\n        console.error('Failed to load recent items:', err);\n      }\n    };\n    fetchRecent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recently added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centreraCards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => {\n            if (item.type === 'movie') {\n              setSelectedMovie({\n                filename: item.fileName\n              });\n            } else {\n              navigate(`/series?name=${encodeURIComponent(item.seriesName)}`);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover-area\",\n            children: [item.poster && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.poster,\n              alt: item.title,\n              className: \"movie-poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movieTitle\",\n              children: [item.title, \" \\u2B50\", item.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, `${item.type}-${item.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(RecentlyAddedRow, \"ol5QmqtmexoEY/hnDucvsqGgLqc=\", false, function () {\n  return [useNavigate];\n});\n_c = RecentlyAddedRow;\nexport default RecentlyAddedRow;\nvar _c;\n$RefreshReg$(_c, \"RecentlyAddedRow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","RecentlyAddedRow","setSelectedMovie","_s","items","setItems","navigate","metadataCache","fetchRecent","token","localStorage","getItem","res","fetch","headers","Authorization","data","json","enriched","Promise","all","map","item","cacheKey","title","current","metaRes","encodeURIComponent","meta","metadata","Title","poster","Poster","imdbRating","genre","Genre","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","filename","seriesName","src","alt","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/recentlyAddedRow.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction RecentlyAddedRow({ setSelectedMovie }) {\r\n    const [items, setItems] = useState([]);\r\n    const navigate = useNavigate();\r\n    const metadataCache = useRef({});\r\n\r\n    useEffect(() => {\r\n        const fetchRecent = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/recent-content`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                const data = await res.json();\r\n\r\n                const enriched = await Promise.all(data.map(async (item) => {\r\n                    const cacheKey = item.title;\r\n\r\n                    if (metadataCache.current[cacheKey]) {\r\n                        return {\r\n                            ...item,\r\n                            ...metadataCache.current[cacheKey],\r\n                        };\r\n                    }\r\n\r\n                    const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(cacheKey)}`);\r\n                    const meta = await metaRes.json();\r\n\r\n                    const metadata = {\r\n                        title: meta.Title || item.title,\r\n                        poster: meta.Poster && meta.Poster !== 'N/A' ? meta.Poster : null,\r\n                        imdbRating: meta.imdbRating || 'N/A',\r\n                        genre: meta.Genre || '',\r\n                    };\r\n\r\n                    metadataCache.current[cacheKey] = metadata;\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...metadata,\r\n                    };\r\n                }));\r\n\r\n                setItems(enriched);\r\n            } catch (err) {\r\n                console.error('Failed to load recent items:', err);\r\n            }\r\n        };\r\n\r\n        fetchRecent();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"movie-row\">\r\n            <h3>Recently added</h3>\r\n            <div className='centreraCards'>\r\n                <div className=\"cards\">\r\n                    {items.map(item => (\r\n                        <div\r\n                            key={`${item.type}-${item.title}`}\r\n                            className=\"movie-card\"\r\n                            onClick={() => {\r\n                                if (item.type === 'movie') {\r\n                                    setSelectedMovie({ filename: item.fileName });\r\n                                } else {\r\n                                    navigate(`/series?name=${encodeURIComponent(item.seriesName)}`);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <div className=\"hover-area\">\r\n                                {item.poster && (\r\n                                    <img src={item.poster} alt={item.title} className=\"movie-poster\" />\r\n                                )}\r\n                                <span className='movieTitle'>{item.title} ‚≠ê{item.imdbRating}</span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentlyAddedRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}