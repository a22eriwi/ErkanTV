{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Movies.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useAuth } from './authContext';\nimport React, { useEffect, useState, useRef } from 'react';\nimport Header from './Header';\nimport movieTitles from './moviesTitles.json';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction Movies() {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  // Sync selectedMovie with URL state\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const play = params.get('play');\n    if (!play && selectedMovie) {\n      setSelectedMovie(null);\n    }\n    if (play && !selectedMovie) {\n      setSelectedMovie({\n        filename: play\n      });\n    }\n  }, [location.search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: \"Movies\",\n          selectedMovie: selectedMovie,\n          setSelectedMovie: setSelectedMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), selectedMovie && /*#__PURE__*/_jsxDEV(VideoOverlay, {\n        filename: selectedMovie.filename,\n        onClose: () => setSelectedMovie(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Movies, \"gNOtIbpTtbddMIIcinP7Xig6TZ4=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = Movies;\nfunction MovieRow({\n  title,\n  setSelectedMovie\n}) {\n  _s2();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const metadataCache = useRef({});\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await fetch(`${API_URL}/api/movies`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const filenames = await res.json(); // ✅ Define this here\n\n        const metadataPromises = filenames.filter(filename => movieTitles[filename]).map(async filename => {\n          const searchTitle = movieTitles[filename];\n\n          // Check cache\n          if (metadataCache.current[searchTitle]) {\n            return {\n              filename,\n              ...metadataCache.current[searchTitle]\n            };\n          }\n\n          // Fetch and cache\n          const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(searchTitle)}`);\n          const metaData = await metaRes.json();\n          const metadata = {\n            title: metaData.Title || searchTitle,\n            poster: metaData.Poster && metaData.Poster !== 'N/A' ? metaData.Poster : null,\n            imdbRating: metaData.imdbRating || 'N/A',\n            genre: metaData.Genre || ''\n          };\n          metadataCache.current[searchTitle] = metadata;\n          return {\n            filename,\n            ...metadata\n          };\n        });\n        const movieWithMetadata = await Promise.all(metadataPromises);\n        setMovies(movieWithMetadata);\n      } catch (err) {\n        console.error('Error fetching movies or metadata:', err);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // Unique genre list\n  const genres = Array.from(new Set(movies.flatMap(m => {\n    var _m$genre;\n    return (_m$genre = m.genre) === null || _m$genre === void 0 ? void 0 : _m$genre.split(', ').filter(Boolean);\n  })));\n\n  // Combined filter logic\n  const filteredMovies = movies.filter(movie => {\n    var _movie$title, _movie$genre, _movie$genre2;\n    const matchesSearch = ((_movie$title = movie.title) === null || _movie$title === void 0 ? void 0 : _movie$title.toLowerCase().includes(searchTerm.toLowerCase())) || ((_movie$genre = movie.genre) === null || _movie$genre === void 0 ? void 0 : _movie$genre.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesGenre = selectedGenre ? (_movie$genre2 = movie.genre) === null || _movie$genre2 === void 0 ? void 0 : _movie$genre2.includes(selectedGenre) : true;\n    return matchesSearch && matchesGenre;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msTitel\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sokDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search movie titles\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"msSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centreraCards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGenre(''),\n            className: !selectedGenre ? 'active' : '',\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGenre(genre),\n            className: selectedGenre === genre ? 'active' : '',\n            children: genre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centreraCards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: filteredMovies.map((movie, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => setSelectedMovie({\n            filename: movie.filename\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover-area\",\n            children: [movie.poster && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster,\n              alt: movie.title,\n              className: \"movie-poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movieTitle\",\n              children: [movie.title, \" \\u2B50\", movie.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)\n        }, `${title}-${movie.filename}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n// Video Overlay\n_s2(MovieRow, \"xzM3HJxjlLQvV+STxohIM9U6c8c=\");\n_c2 = MovieRow;\nfunction VideoOverlay({\n  filename,\n  onClose\n}) {\n  const token = localStorage.getItem('token');\n  const videoUrl = `${API_URL}/api/stream/movie/${filename}?token=${token}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        autoPlay: true,\n        className: \"video-player\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n_c3 = VideoOverlay;\nexport default Movies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"MovieRow\");\n$RefreshReg$(_c3, \"VideoOverlay\");","map":{"version":3,"names":["useAuth","React","useEffect","useState","useRef","Header","movieTitles","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","Movies","_s","isLoggedIn","navigate","location","selectedMovie","setSelectedMovie","params","URLSearchParams","search","play","get","filename","children","fileName","_jsxFileName","lineNumber","columnNumber","className","MovieRow","title","VideoOverlay","onClose","_c","_s2","movies","setMovies","searchTerm","setSearchTerm","selectedGenre","setSelectedGenre","metadataCache","fetchMovies","token","localStorage","getItem","res","fetch","headers","Authorization","filenames","json","metadataPromises","filter","map","searchTitle","current","metaRes","encodeURIComponent","metaData","metadata","Title","poster","Poster","imdbRating","genre","Genre","movieWithMetadata","Promise","all","err","console","error","genres","Array","from","Set","flatMap","m","_m$genre","split","Boolean","filteredMovies","movie","_movie$title","_movie$genre","_movie$genre2","matchesSearch","toLowerCase","includes","matchesGenre","type","placeholder","value","onChange","e","target","onClick","index","idx","src","alt","_c2","videoUrl","controls","autoPlay","_c3","$RefreshReg$"],"sources":["D:/Erkflix/src/Movies.js"],"sourcesContent":["import { useAuth } from './authContext';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport Header from './Header';\r\nimport movieTitles from './moviesTitles.json';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction Movies() {\r\n    const { isLoggedIn } = useAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n    // Sync selectedMovie with URL state\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const play = params.get('play');\r\n\r\n        if (!play && selectedMovie) {\r\n            setSelectedMovie(null);\r\n        }\r\n\r\n        if (play && !selectedMovie) {\r\n            setSelectedMovie({ filename: play });\r\n        }\r\n    }, [location.search]);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className='mainDiv'>\r\n                {isLoggedIn && (\r\n                    <>\r\n                        <MovieRow\r\n                            title=\"Movies\"\r\n                            selectedMovie={selectedMovie}\r\n                            setSelectedMovie={setSelectedMovie}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {selectedMovie && (\r\n                    <VideoOverlay\r\n                        filename={selectedMovie.filename}\r\n                        onClose={() => setSelectedMovie(null)}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction MovieRow({ title, setSelectedMovie }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedGenre, setSelectedGenre] = useState('');\r\n    const metadataCache = useRef({});\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/movies`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n\r\n                const filenames = await res.json(); // ✅ Define this here\r\n\r\n                const metadataPromises = filenames\r\n                    .filter((filename) => movieTitles[filename])\r\n                    .map(async (filename) => {\r\n                        const searchTitle = movieTitles[filename];\r\n\r\n                        // Check cache\r\n                        if (metadataCache.current[searchTitle]) {\r\n                            return {\r\n                                filename,\r\n                                ...metadataCache.current[searchTitle],\r\n                            };\r\n                        }\r\n\r\n                        // Fetch and cache\r\n                        const metaRes = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(searchTitle)}`);\r\n                        const metaData = await metaRes.json();\r\n\r\n                        const metadata = {\r\n                            title: metaData.Title || searchTitle,\r\n                            poster: metaData.Poster && metaData.Poster !== 'N/A' ? metaData.Poster : null,\r\n                            imdbRating: metaData.imdbRating || 'N/A',\r\n                            genre: metaData.Genre || '',\r\n                        };\r\n\r\n                        metadataCache.current[searchTitle] = metadata;\r\n\r\n                        return {\r\n                            filename,\r\n                            ...metadata,\r\n                        };\r\n                    });\r\n\r\n                const movieWithMetadata = await Promise.all(metadataPromises);\r\n                setMovies(movieWithMetadata);\r\n            } catch (err) {\r\n                console.error('Error fetching movies or metadata:', err);\r\n            }\r\n        };\r\n\r\n        fetchMovies();\r\n    }, []);\r\n\r\n\r\n    // Unique genre list\r\n    const genres = Array.from(\r\n        new Set(movies.flatMap((m) => m.genre?.split(', ').filter(Boolean)))\r\n    );\r\n\r\n    // Combined filter logic\r\n    const filteredMovies = movies.filter((movie) => {\r\n        const matchesSearch =\r\n            movie.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            movie.genre?.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n        const matchesGenre = selectedGenre\r\n            ? movie.genre?.includes(selectedGenre)\r\n            : true;\r\n\r\n        return matchesSearch && matchesGenre;\r\n    });\r\n\r\n    return (\r\n        <div className=\"movie-row\">\r\n            <h3 className=\"msTitel\">{title}</h3>\r\n            {/* Search */}\r\n            <div className='searchBox'>\r\n                <div className=\"sokDiv\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search movie titles\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"msSearch\"\r\n                    />\r\n                </div>\r\n                {/* Genre Buttons */}\r\n                <div className=\"centreraCards\">\r\n                    <div className=\"genre-buttons\">\r\n                        <button\r\n                            onClick={() => setSelectedGenre('')}\r\n                            className={!selectedGenre ? 'active' : ''}\r\n                        >\r\n                            All\r\n                        </button>\r\n                        {genres.map((genre, index) => (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => setSelectedGenre(genre)}\r\n                                className={selectedGenre === genre ? 'active' : ''}\r\n                            >\r\n                                {genre}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Movie Cards */}\r\n            <div className='centreraCards'>\r\n                <div className=\"cards\">\r\n                    {filteredMovies.map((movie, idx) => (\r\n                        <div\r\n                            className=\"movie-card\"\r\n                            key={`${title}-${movie.filename}`}\r\n                            onClick={() => setSelectedMovie({ filename: movie.filename })}\r\n                        >\r\n                            <div className=\"hover-area\">\r\n                                {movie.poster && (\r\n                                    <img src={movie.poster} alt={movie.title} className=\"movie-poster\" />\r\n                                )}\r\n                                <span className=\"movieTitle\">\r\n                                    {movie.title} ⭐{movie.imdbRating}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Video Overlay\r\nfunction VideoOverlay({ filename, onClose }) {\r\n    const token = localStorage.getItem('token');\r\n    const videoUrl = `${API_URL}/api/stream/movie/${filename}?token=${token}`\r\n\r\n    return (\r\n        <div className=\"video-overlay\">\r\n            <div className=\"video-wrapper\">\r\n                <button className=\"close-button\" onClick={onClose}>✖</button>\r\n                <video\r\n                    controls\r\n                    autoPlay\r\n                    className=\"video-player\"\r\n                >\r\n                    <source src={videoUrl} type=\"video/mp4\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}