{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/authContext.js\nimport { createContext, useContext, useEffect, useState, useRef, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport api from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation(); // get current route\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const refreshTimeout = useRef();\n  const [loading, setLoading] = useState(true);\n  const refreshAccessToken = useCallback(async () => {\n    try {\n      const res = await api.post('/api/token', {}, {\n        withCredentials: true\n      });\n      const newToken = res.data.accessToken;\n      const decoded = jwtDecode(newToken);\n      setUser(decoded);\n      setAccessToken(newToken);\n      setIsLoggedIn(true);\n      const timeout = (decoded.exp - Date.now() / 1000) * 1000;\n      clearTimeout(refreshTimeout.current);\n      refreshTimeout.current = setTimeout(refreshAccessToken, timeout - 2000);\n      if (sessionStorage.getItem('justLoggedIn')) {\n        sessionStorage.removeItem('justLoggedIn');\n      }\n    } catch (err) {\n      // Only log if the user had been logged in previously\n      if (accessToken || isLoggedIn) {\n        var _err$response;\n        console.warn('Refresh token failed, user not logged in.', (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      }\n      setUser(null);\n      setAccessToken(null);\n      setIsLoggedIn(false);\n    } finally {\n      setLoading(false);\n    }\n  }, [accessToken, isLoggedIn]);\n  useEffect(() => {\n    refreshAccessToken();\n  }, [location.pathname, refreshAccessToken]);\n  const login = token => {\n    const decoded = jwtDecode(token);\n    setUser(decoded);\n    setAccessToken(token);\n    setIsLoggedIn(true);\n    sessionStorage.setItem('justLoggedIn', 'true');\n    const timeout = (decoded.exp - Date.now() / 1000) * 1000;\n    clearTimeout(refreshTimeout.current);\n    refreshTimeout.current = setTimeout(refreshAccessToken, timeout - 2000);\n  };\n\n  // authContext.js\n  const logout = async (resetLoading = true) => {\n    navigate(\"/\", {\n      replace: true\n    });\n    try {\n      await api.post('/api/logout');\n    } catch (err) {\n      console.error('Logout error:', err);\n    }\n    setUser(null);\n    setAccessToken(null);\n    setIsLoggedIn(false);\n    clearTimeout(refreshTimeout.current);\n    sessionStorage.removeItem('justLoggedIn');\n    if (resetLoading) setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      accessToken,\n      isLoggedIn,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"14BTy9c1S0idw5K8TrNARrhIPaE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useRef","useCallback","useLocation","useNavigate","jwtDecode","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","navigate","location","user","setUser","accessToken","setAccessToken","isLoggedIn","setIsLoggedIn","refreshTimeout","loading","setLoading","refreshAccessToken","res","post","withCredentials","newToken","data","decoded","timeout","exp","Date","now","clearTimeout","current","setTimeout","sessionStorage","getItem","removeItem","err","_err$response","console","warn","response","message","pathname","login","token","setItem","logout","resetLoading","replace","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Erkflix/src/authContext.js"],"sourcesContent":["// src/authContext.js\r\nimport { createContext, useContext, useEffect, useState, useRef, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport api from './Api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation(); // get current route\r\n  const [user, setUser] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const refreshTimeout = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const refreshAccessToken = useCallback(async () => {\r\n    try {\r\n      const res = await api.post('/api/token', {}, { withCredentials: true });\r\n      const newToken = res.data.accessToken;\r\n      const decoded = jwtDecode(newToken);\r\n\r\n      setUser(decoded);\r\n      setAccessToken(newToken);\r\n      setIsLoggedIn(true);\r\n\r\n      const timeout = (decoded.exp - Date.now() / 1000) * 1000;\r\n      clearTimeout(refreshTimeout.current);\r\n      refreshTimeout.current = setTimeout(refreshAccessToken, timeout - 2000);\r\n\r\n      if (sessionStorage.getItem('justLoggedIn')) {\r\n        sessionStorage.removeItem('justLoggedIn');\r\n      }\r\n    } catch (err) {\r\n      // Only log if the user had been logged in previously\r\n      if (accessToken || isLoggedIn) {\r\n        console.warn('Refresh token failed, user not logged in.', err?.response?.data || err.message);\r\n      }\r\n      setUser(null);\r\n      setAccessToken(null);\r\n      setIsLoggedIn(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [accessToken, isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    refreshAccessToken();\r\n  }, [location.pathname, refreshAccessToken]);\r\n\r\n  const login = (token) => {\r\n    const decoded = jwtDecode(token);\r\n    setUser(decoded);\r\n    setAccessToken(token);\r\n    setIsLoggedIn(true);\r\n\r\n    sessionStorage.setItem('justLoggedIn', 'true');\r\n\r\n    const timeout = (decoded.exp - Date.now() / 1000) * 1000;\r\n    clearTimeout(refreshTimeout.current);\r\n    refreshTimeout.current = setTimeout(refreshAccessToken, timeout - 2000);\r\n  };\r\n\r\n  // authContext.js\r\n  const logout = async (resetLoading = true) => {\r\n    navigate(\"/\", { replace: true });\r\n    try {\r\n      await api.post('/api/logout');\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n    }\r\n\r\n    setUser(null);\r\n    setAccessToken(null);\r\n    setIsLoggedIn(false);\r\n    clearTimeout(refreshTimeout.current);\r\n\r\n    sessionStorage.removeItem('justLoggedIn');\r\n\r\n    if (resetLoading) setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, accessToken, isLoggedIn, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}