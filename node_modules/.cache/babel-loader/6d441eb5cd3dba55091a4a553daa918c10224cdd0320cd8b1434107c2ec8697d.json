{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\MoviePage.js\",\n  _s = $RefreshSig$();\n// src/components/MoviePage.js\nimport { useAuth } from './authContext';\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nexport default function MoviePage() {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  const {\n    movieFolder\n  } = useParams();\n  const [metadata, setMetadata] = useState(null);\n  const [activeTab, setActiveTab] = useState('Details');\n  const [suggestedMovies, setSuggestedMovies] = useState([]);\n  const metadataCache = useRef({});\n  const navigate = useNavigate();\n  console.log('🧩 movieFolder param:', movieFolder);\n  useEffect(() => {\n    if (!movieFolder) return;\n    const token = localStorage.getItem('token');\n    const fetchMetadata = async () => {\n      console.log(`📡 Fetching metadata for: ${movieFolder}`);\n      try {\n        const res = await fetch(`${API_URL}/api/movie-metadata/${encodeURIComponent(movieFolder)}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error('Metadata not found');\n        const data = await res.json();\n        setMetadata(data);\n        metadataCache.current[data.Title] = {\n          genre: data.Genre || ''\n        };\n      } catch (err) {\n        console.error('❌ Failed to fetch movie metadata:', err);\n      }\n    };\n    fetchMetadata();\n  }, [movieFolder]);\n  useEffect(() => {\n    if (!(metadata !== null && metadata !== void 0 && metadata.Genre)) return;\n    const token = localStorage.getItem('token');\n    const fetchSuggested = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/movies`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const movieList = await res.json();\n        const currentGenres = metadata.Genre.split(',').map(g => g.trim().toLowerCase());\n        const suggestions = movieList.filter(({\n          title,\n          folder\n        }) => {\n          const m = metadataCache.current[title];\n          if (!m || folder === movieFolder) return false;\n          const otherGenres = m.genre.split(',').map(g => g.trim().toLowerCase());\n          return currentGenres.some(g => otherGenres.includes(g));\n        });\n        setSuggestedMovies(suggestions);\n      } catch (err) {\n        console.error('❌ Error fetching suggested movies:', err);\n      }\n    };\n    fetchSuggested();\n  }, [metadata, movieFolder]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        id: \"movie-row-Home\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centreraCards\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"componentDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"msTitel\",\n              children: [(metadata === null || metadata === void 0 ? void 0 : metadata.Title) || movieFolder, \" \\u2B50\", metadata === null || metadata === void 0 ? void 0 : metadata.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tablist\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: activeTab === 'Suggested' ? 'active' : '',\n                onClick: () => setActiveTab('Suggested'),\n                children: \"Suggested\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: activeTab === 'Details' ? 'active' : '',\n                onClick: () => setActiveTab('Details'),\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), activeTab === 'Suggested' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              id: \"episodeCards\",\n              children: suggestedMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No suggestions found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 45\n              }, this) : suggestedMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-card\",\n                onClick: () => navigate(`/movies/${encodeURIComponent(movie.folder)}`),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hover-area\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${API_URL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`,\n                    alt: movie.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"movieTitle\",\n                    children: movie.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 53\n                }, this)\n              }, movie.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), activeTab === 'Details' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plot\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"detailsTitle\",\n                    children: \"Plot:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: metadata === null || metadata === void 0 ? void 0 : metadata.Plot\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 86\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"genre\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Released:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Released\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 118\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"detailsTitle\",\n                    children: \"Genre:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: metadata === null || metadata === void 0 ? void 0 : metadata.Genre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 87\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"starring\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Director:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Director\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 118\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Starring:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Actors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 118\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Awards:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Awards\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 116\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MoviePage, \"Lhrc4Lg551a/q3MuSEV2f+Ts4R4=\", false, function () {\n  return [useAuth, useParams, useNavigate];\n});\n_c = MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["useAuth","useEffect","useState","useRef","useParams","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","MoviePage","_s","isLoggedIn","movieFolder","metadata","setMetadata","activeTab","setActiveTab","suggestedMovies","setSuggestedMovies","metadataCache","navigate","console","log","token","localStorage","getItem","fetchMetadata","res","fetch","encodeURIComponent","headers","Authorization","ok","Error","data","json","current","Title","genre","Genre","err","error","fetchSuggested","movieList","currentGenres","split","map","g","trim","toLowerCase","suggestions","filter","title","folder","m","otherGenres","some","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","imdbRating","onClick","length","movie","src","alt","filename","Plot","Released","Director","Actors","Awards","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/MoviePage.js"],"sourcesContent":["// src/components/MoviePage.js\r\nimport { useAuth } from './authContext';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport default function MoviePage() {\r\n    const { isLoggedIn } = useAuth();\r\n    const { movieFolder } = useParams();\r\n    const [metadata, setMetadata] = useState(null);\r\n    const [activeTab, setActiveTab] = useState('Details');\r\n    const [suggestedMovies, setSuggestedMovies] = useState([]);\r\n    const metadataCache = useRef({});\r\n    const navigate = useNavigate();\r\n\r\n    console.log('🧩 movieFolder param:', movieFolder);\r\n\r\n    useEffect(() => {\r\n        if (!movieFolder) return;\r\n        const token = localStorage.getItem('token');\r\n\r\n        const fetchMetadata = async () => {\r\n            console.log(`📡 Fetching metadata for: ${movieFolder}`);\r\n\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/movie-metadata/${encodeURIComponent(movieFolder)}`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                if (!res.ok) throw new Error('Metadata not found');\r\n                const data = await res.json();\r\n                setMetadata(data);\r\n                metadataCache.current[data.Title] = {\r\n                    genre: data.Genre || '',\r\n                };\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch movie metadata:', err);\r\n            }\r\n        };\r\n\r\n        fetchMetadata();\r\n    }, [movieFolder]);\r\n\r\n    useEffect(() => {\r\n        if (!metadata?.Genre) return;\r\n        const token = localStorage.getItem('token');\r\n\r\n        const fetchSuggested = async () => {\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/movies`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                const movieList = await res.json();\r\n\r\n                const currentGenres = metadata.Genre.split(',').map(g => g.trim().toLowerCase());\r\n\r\n                const suggestions = movieList.filter(({ title, folder }) => {\r\n                    const m = metadataCache.current[title];\r\n                    if (!m || folder === movieFolder) return false;\r\n                    const otherGenres = m.genre.split(',').map(g => g.trim().toLowerCase());\r\n                    return currentGenres.some(g => otherGenres.includes(g));\r\n                });\r\n\r\n                setSuggestedMovies(suggestions);\r\n            } catch (err) {\r\n                console.error('❌ Error fetching suggested movies:', err);\r\n            }\r\n        };\r\n\r\n        fetchSuggested();\r\n    }, [metadata, movieFolder]);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"mainDiv\">\r\n                {isLoggedIn && (\r\n                    <div className='movie-row' id='movie-row-Home'>\r\n                        <div className=\"centreraCards\">\r\n                            <div className=\"componentDiv\">\r\n                                <h3 className=\"msTitel\">{metadata?.Title || movieFolder} ⭐{metadata?.imdbRating}</h3>\r\n                                <ul className='tablist'>\r\n                                    <li\r\n                                        className={activeTab === 'Suggested' ? 'active' : ''}\r\n                                        onClick={() => setActiveTab('Suggested')}\r\n                                    >\r\n                                        Suggested\r\n                                    </li>\r\n                                    <li\r\n                                        className={activeTab === 'Details' ? 'active' : ''}\r\n                                        onClick={() => setActiveTab('Details')}\r\n                                    >\r\n                                        Details\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                {activeTab === 'Suggested' && (\r\n                                    <div className=\"cards\" id='episodeCards'>\r\n                                        {suggestedMovies.length === 0 ? (\r\n                                            <p>No suggestions found.</p>\r\n                                        ) : (\r\n                                            suggestedMovies.map((movie) => (\r\n                                                <div\r\n                                                    key={movie.filename}\r\n                                                    className=\"movie-card\"\r\n                                                    onClick={() => navigate(`/movies/${encodeURIComponent(movie.folder)}`)}\r\n                                                >\r\n                                                    <div className=\"hover-area\">\r\n                                                        <img\r\n                                                            src={`${API_URL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`}\r\n                                                            alt={movie.title}\r\n                                                        />\r\n                                                        <span className=\"movieTitle\">{movie.title}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                                {activeTab === 'Details' && (\r\n                                    <div className='details'>\r\n                                        <div className=\"details-wrapper\">\r\n                                            <div className='plot'>\r\n                                                <p className='detailsTitle'>Plot:</p><p>{metadata?.Plot}</p>\r\n                                            </div>\r\n                                            <div className='genre'>\r\n                                                <div className='detailsDiv'><p className='detailsTitle'>Released:</p><p>{metadata?.Released}</p></div>\r\n                                                <p className='detailsTitle'>Genre:</p><p>{metadata?.Genre}</p>\r\n                                            </div>\r\n                                            <div className='starring'>\r\n                                                <div className='detailsDiv'><p className='detailsTitle'>Director:</p><p>{metadata?.Director}</p></div>\r\n                                                <div className='detailsDiv'><p className='detailsTitle'>Starring:</p><p>{metadata?.Actors}</p></div>\r\n                                                <div className='detailsDiv'><p className='detailsTitle'>Awards:</p><p>{metadata?.Awards}</p></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAW,CAAC,GAAGjB,OAAO,CAAC,CAAC;EAChC,MAAM;IAAEkB;EAAY,CAAC,GAAGd,SAAS,CAAC,CAAC;EACnC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMuB,aAAa,GAAGtB,MAAM,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMuB,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAE9BsB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEV,WAAW,CAAC;EAEjDjB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiB,WAAW,EAAE;IAClB,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9BL,OAAO,CAACC,GAAG,CAAC,6BAA6BV,WAAW,EAAE,CAAC;MAEvD,IAAI;QACA,MAAMe,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGvB,OAAO,uBAAuBwB,kBAAkB,CAACjB,WAAW,CAAC,EAAE,EAAE;UACxFkB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUR,KAAK;UAAG;QAChD,CAAC,CAAC;QACF,IAAI,CAACI,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QAClD,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;QAC7BrB,WAAW,CAACoB,IAAI,CAAC;QACjBf,aAAa,CAACiB,OAAO,CAACF,IAAI,CAACG,KAAK,CAAC,GAAG;UAChCC,KAAK,EAAEJ,IAAI,CAACK,KAAK,IAAI;QACzB,CAAC;MACL,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVnB,OAAO,CAACoB,KAAK,CAAC,mCAAmC,EAAED,GAAG,CAAC;MAC3D;IACJ,CAAC;IAEDd,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC;EAEjBjB,SAAS,CAAC,MAAM;IACZ,IAAI,EAACkB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAE0B,KAAK,GAAE;IACtB,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGvB,OAAO,aAAa,EAAE;UAC7CyB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUR,KAAK;UAAG;QAChD,CAAC,CAAC;QACF,MAAMoB,SAAS,GAAG,MAAMhB,GAAG,CAACQ,IAAI,CAAC,CAAC;QAElC,MAAMS,aAAa,GAAG/B,QAAQ,CAAC0B,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;QAEhF,MAAMC,WAAW,GAAGP,SAAS,CAACQ,MAAM,CAAC,CAAC;UAAEC,KAAK;UAAEC;QAAO,CAAC,KAAK;UACxD,MAAMC,CAAC,GAAGnC,aAAa,CAACiB,OAAO,CAACgB,KAAK,CAAC;UACtC,IAAI,CAACE,CAAC,IAAID,MAAM,KAAKzC,WAAW,EAAE,OAAO,KAAK;UAC9C,MAAM2C,WAAW,GAAGD,CAAC,CAAChB,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;UACvE,OAAOL,aAAa,CAACY,IAAI,CAACT,CAAC,IAAIQ,WAAW,CAACE,QAAQ,CAACV,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF7B,kBAAkB,CAACgC,WAAW,CAAC;MACnC,CAAC,CAAC,OAAOV,GAAG,EAAE;QACVnB,OAAO,CAACoB,KAAK,CAAC,oCAAoC,EAAED,GAAG,CAAC;MAC5D;IACJ,CAAC;IAEDE,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC7B,QAAQ,EAAED,WAAW,CAAC,CAAC;EAE3B,oBACIV,OAAA,CAAAE,SAAA;IAAAsD,QAAA,gBACIxD,OAAA,CAACF,MAAM;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5D,OAAA;MAAK6D,SAAS,EAAC,SAAS;MAAAL,QAAA,EACnB/C,UAAU,iBACPT,OAAA;QAAK6D,SAAS,EAAC,WAAW;QAACC,EAAE,EAAC,gBAAgB;QAAAN,QAAA,eAC1CxD,OAAA;UAAK6D,SAAS,EAAC,eAAe;UAAAL,QAAA,eAC1BxD,OAAA;YAAK6D,SAAS,EAAC,cAAc;YAAAL,QAAA,gBACzBxD,OAAA;cAAI6D,SAAS,EAAC,SAAS;cAAAL,QAAA,GAAE,CAAA7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEwB,KAAK,KAAIzB,WAAW,EAAC,SAAE,EAACC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoD,UAAU;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrF5D,OAAA;cAAI6D,SAAS,EAAC,SAAS;cAAAL,QAAA,gBACnBxD,OAAA;gBACI6D,SAAS,EAAEhD,SAAS,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAG;gBACrDmD,OAAO,EAAEA,CAAA,KAAMlD,YAAY,CAAC,WAAW,CAAE;gBAAA0C,QAAA,EAC5C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL5D,OAAA;gBACI6D,SAAS,EAAEhD,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;gBACnDmD,OAAO,EAAEA,CAAA,KAAMlD,YAAY,CAAC,SAAS,CAAE;gBAAA0C,QAAA,EAC1C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,EAEJ/C,SAAS,KAAK,WAAW,iBACtBb,OAAA;cAAK6D,SAAS,EAAC,OAAO;cAACC,EAAE,EAAC,cAAc;cAAAN,QAAA,EACnCzC,eAAe,CAACkD,MAAM,KAAK,CAAC,gBACzBjE,OAAA;gBAAAwD,QAAA,EAAG;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,GAE5B7C,eAAe,CAAC6B,GAAG,CAAEsB,KAAK,iBACtBlE,OAAA;gBAEI6D,SAAS,EAAC,YAAY;gBACtBG,OAAO,EAAEA,CAAA,KAAM9C,QAAQ,CAAC,WAAWS,kBAAkB,CAACuC,KAAK,CAACf,MAAM,CAAC,EAAE,CAAE;gBAAAK,QAAA,eAEvExD,OAAA;kBAAK6D,SAAS,EAAC,YAAY;kBAAAL,QAAA,gBACvBxD,OAAA;oBACImE,GAAG,EAAE,GAAGhE,OAAO,iBAAiBwB,kBAAkB,CAACuC,KAAK,CAACf,MAAM,CAAC,MAAO;oBACvEiB,GAAG,EAAEF,KAAK,CAAChB;kBAAM;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpB,CAAC,eACF5D,OAAA;oBAAM6D,SAAS,EAAC,YAAY;oBAAAL,QAAA,EAAEU,KAAK,CAAChB;kBAAK;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChD;cAAC,GAVDM,KAAK,CAACG,QAAQ;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAWlB,CACR;YACJ;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CACR,EACA/C,SAAS,KAAK,SAAS,iBACpBb,OAAA;cAAK6D,SAAS,EAAC,SAAS;cAAAL,QAAA,eACpBxD,OAAA;gBAAK6D,SAAS,EAAC,iBAAiB;gBAAAL,QAAA,gBAC5BxD,OAAA;kBAAK6D,SAAS,EAAC,MAAM;kBAAAL,QAAA,gBACjBxD,OAAA;oBAAG6D,SAAS,EAAC,cAAc;oBAAAL,QAAA,EAAC;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC,eAAA5D,OAAA;oBAAAwD,QAAA,EAAI7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE2D;kBAAI;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC,eACN5D,OAAA;kBAAK6D,SAAS,EAAC,OAAO;kBAAAL,QAAA,gBAClBxD,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBAACxD,OAAA;sBAAG6D,SAAS,EAAC,cAAc;sBAAAL,QAAA,EAAC;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC,eAAA5D,OAAA;sBAAAwD,QAAA,EAAI7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4D;oBAAQ;sBAAAd,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtG5D,OAAA;oBAAG6D,SAAS,EAAC,cAAc;oBAAAL,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC,eAAA5D,OAAA;oBAAAwD,QAAA,EAAI7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE0B;kBAAK;oBAAAoB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D,CAAC,eACN5D,OAAA;kBAAK6D,SAAS,EAAC,UAAU;kBAAAL,QAAA,gBACrBxD,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBAACxD,OAAA;sBAAG6D,SAAS,EAAC,cAAc;sBAAAL,QAAA,EAAC;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC,eAAA5D,OAAA;sBAAAwD,QAAA,EAAI7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE6D;oBAAQ;sBAAAf,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtG5D,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBAACxD,OAAA;sBAAG6D,SAAS,EAAC,cAAc;sBAAAL,QAAA,EAAC;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC,eAAA5D,OAAA;sBAAAwD,QAAA,EAAI7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE8D;oBAAM;sBAAAhB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACpG5D,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBAACxD,OAAA;sBAAG6D,SAAS,EAAC,cAAc;sBAAAL,QAAA,EAAC;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC,eAAA5D,OAAA;sBAAAwD,QAAA,EAAI7C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE+D;oBAAM;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACR,CAAC;AAEX;AAACpD,EAAA,CAzIuBD,SAAS;EAAA,QACNf,OAAO,EACNI,SAAS,EAKhBC,WAAW;AAAA;AAAA8E,EAAA,GAPRpE,SAAS;AAAA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}