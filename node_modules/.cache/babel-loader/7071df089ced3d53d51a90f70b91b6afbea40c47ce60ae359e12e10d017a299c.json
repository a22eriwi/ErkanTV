{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\SeriesPage.js\",\n  _s2 = $RefreshSig$();\n// src/components/SeriesPage.js\nimport { useAuth } from './authContext';\nimport { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nexport default function SeriesPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    isLoggedIn\n  } = useAuth();\n  const {\n    seriesName\n  } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [episodes, setEpisodes] = useState([]);\n  const [availableSeasons, setAvailableSeasons] = useState([]);\n  const [currentSeason, setCurrentSeason] = useState('');\n  const [activeTab, setActiveTab] = useState('Episodes');\n\n  // Store all episodes grouped by season\n  const [seasonMap, setSeasonMap] = useState({});\n  useEffect(() => {\n    if (!seriesName) return;\n    const token = localStorage.getItem('token');\n    const fetchMetadata = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/series-metadata/${encodeURIComponent(seriesName)}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error('Metadata not found');\n        const data = await res.json();\n        setMetadata(data);\n      } catch (err) {\n        console.error('❌ Failed to fetch series metadata:', err);\n      }\n    };\n    const fetchSeasons = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/series/${encodeURIComponent(seriesName)}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error('Seasons not found');\n        const data = await res.json();\n        const grouped = {};\n        for (const {\n          season,\n          episodes\n        } of data.seasons) {\n          grouped[season] = episodes;\n        }\n        const allSeasons = Object.keys(grouped);\n        setSeasonMap(grouped);\n        setAvailableSeasons(allSeasons);\n        setCurrentSeason(allSeasons[0]);\n        setEpisodes(grouped[allSeasons[0]]);\n      } catch (err) {\n        console.error('❌ Failed to fetch seasons:', err);\n      }\n    };\n    fetchMetadata();\n    fetchSeasons();\n  }, [seriesName]);\n  useEffect(() => {\n    if (currentSeason && seasonMap[currentSeason]) {\n      setEpisodes(seasonMap[currentSeason]);\n    }\n  }, [currentSeason, seasonMap]);\n  function SeasonDropdown({\n    availableSeasons,\n    currentSeason,\n    setCurrentSeason\n  }) {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const dropdownRef = useRef();\n\n    // Close dropdown when clicking outside\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"season-dropdown\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        onClick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentSeason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: availableSeasons.map(season => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dropdown-item ${currentSeason === season ? 'active' : ''}`,\n          onClick: () => {\n            setCurrentSeason(season);\n            setIsOpen(false);\n          },\n          children: season\n        }, season, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n  _s(SeasonDropdown, \"uhOyve9TWk+bvhPJTPlaMsUEQAY=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        id: \"movie-row-Home\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centreraCards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"componentDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"msTitel\",\n                children: [(metadata === null || metadata === void 0 ? void 0 : metadata.Title) || seriesName, \" \\u2B50\", metadata === null || metadata === void 0 ? void 0 : metadata.imdbRating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"tablist\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeTab === 'Episodes' ? 'active' : '',\n                  onClick: () => setActiveTab('Episodes'),\n                  children: \"Episodes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeTab === 'Suggested' ? 'active' : '',\n                  onClick: () => setActiveTab('Suggested'),\n                  children: \"Suggested\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeTab === 'Details' ? 'active' : '',\n                  onClick: () => setActiveTab('Details'),\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this), activeTab === 'Episodes' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"season-select-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(SeasonDropdown, {\n                    availableSeasons: availableSeasons,\n                    currentSeason: currentSeason,\n                    setCurrentSeason: setCurrentSeason\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cards\",\n                  id: \"episodeCards\",\n                  children: episodes.sort((a, b) => {\n                    const getEpNum = filename => {\n                      const match = filename.match(/^(\\d+)\\./);\n                      return match ? parseInt(match[1], 10) : 0;\n                    };\n                    return getEpNum(a.filename) - getEpNum(b.filename);\n                  }).map(episode => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movie-card\",\n                    onClick: () => {\n                      setSelectedMovie({\n                        filename: episode.filename,\n                        path: episode.path,\n                        seriesName\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"hover-area\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"image-container\",\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `${API_URL}/seriesPosters/${encodeURIComponent(seriesName)}.jpg`,\n                          alt: seriesName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"movieTitle\",\n                          children: episode.filename\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 61\n                    }, this)\n                  }, episode.filename, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true), activeTab === 'Suggested' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggested-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Suggested series based on genres: \", (metadata === null || metadata === void 0 ? void 0 : metadata.Genre) || 'Unknown']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this), activeTab === 'Details' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Plot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Plot\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 89\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Released\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Released\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 93\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Genre\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Genre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 90\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Director\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Director\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 93\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Starring\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Actors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 93\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Awards\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Awards\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), selectedMovie && /*#__PURE__*/_jsxDEV(VideoOverlay, {\n            path: selectedMovie.path,\n            onClose: () => setSelectedMovie(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s2(SeriesPage, \"BQcE3bTHrWXWwZpF0St5ofrqVdg=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = SeriesPage;\nfunction VideoOverlay({\n  path = '',\n  onClose\n}) {\n  if (!path) return null;\n  const token = localStorage.getItem('token');\n  const videoUrl = `${API_URL}/api/stream/file?path=${encodeURIComponent(path)}&token=${token}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        autoPlay: true,\n        className: \"video-player\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this);\n}\n_c2 = VideoOverlay;\nvar _c, _c2;\n$RefreshReg$(_c, \"SeriesPage\");\n$RefreshReg$(_c2, \"VideoOverlay\");","map":{"version":3,"names":["useAuth","useState","useRef","useEffect","useParams","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","SeriesPage","_s2","_s","$RefreshSig$","isLoggedIn","seriesName","selectedMovie","setSelectedMovie","metadata","setMetadata","episodes","setEpisodes","availableSeasons","setAvailableSeasons","currentSeason","setCurrentSeason","activeTab","setActiveTab","seasonMap","setSeasonMap","token","localStorage","getItem","fetchMetadata","res","fetch","encodeURIComponent","headers","Authorization","ok","Error","data","json","err","console","error","fetchSeasons","grouped","season","seasons","allSeasons","Object","keys","SeasonDropdown","isOpen","setIsOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","id","Title","imdbRating","sort","a","b","getEpNum","filename","match","parseInt","episode","path","src","alt","Genre","Plot","Released","Director","Actors","Awards","VideoOverlay","onClose","_c","videoUrl","controls","autoPlay","type","_c2","$RefreshReg$"],"sources":["D:/Erkflix/src/SeriesPage.js"],"sourcesContent":["// src/components/SeriesPage.js\r\nimport { useAuth } from './authContext';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport default function SeriesPage() {\r\n    const { isLoggedIn } = useAuth();\r\n    const { seriesName } = useParams();\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n    const [metadata, setMetadata] = useState(null);\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const [availableSeasons, setAvailableSeasons] = useState([]);\r\n    const [currentSeason, setCurrentSeason] = useState('');\r\n    const [activeTab, setActiveTab] = useState('Episodes');\r\n\r\n    // Store all episodes grouped by season\r\n    const [seasonMap, setSeasonMap] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!seriesName) return;\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        const fetchMetadata = async () => {\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/series-metadata/${encodeURIComponent(seriesName)}`, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                if (!res.ok) throw new Error('Metadata not found');\r\n                const data = await res.json();\r\n                setMetadata(data);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch series metadata:', err);\r\n            }\r\n        };\r\n\r\n        const fetchSeasons = async () => {\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/series/${encodeURIComponent(seriesName)}`, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                if (!res.ok) throw new Error('Seasons not found');\r\n                const data = await res.json();\r\n\r\n                const grouped = {};\r\n                for (const { season, episodes } of data.seasons) {\r\n                    grouped[season] = episodes;\r\n                }\r\n\r\n                const allSeasons = Object.keys(grouped);\r\n                setSeasonMap(grouped);\r\n                setAvailableSeasons(allSeasons);\r\n                setCurrentSeason(allSeasons[0]);\r\n                setEpisodes(grouped[allSeasons[0]]);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch seasons:', err);\r\n            }\r\n        };\r\n\r\n        fetchMetadata();\r\n        fetchSeasons();\r\n    }, [seriesName]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentSeason && seasonMap[currentSeason]) {\r\n            setEpisodes(seasonMap[currentSeason]);\r\n        }\r\n    }, [currentSeason, seasonMap]);\r\n\r\n    function SeasonDropdown({ availableSeasons, currentSeason, setCurrentSeason }) {\r\n        const [isOpen, setIsOpen] = useState(false);\r\n        const dropdownRef = useRef();\r\n\r\n        // Close dropdown when clicking outside\r\n        useEffect(() => {\r\n            const handleClickOutside = (event) => {\r\n                if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                    setIsOpen(false);\r\n                }\r\n            };\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }, []);\r\n\r\n        return (\r\n            <div className=\"season-dropdown\" ref={dropdownRef}>\r\n                <button\r\n                    className=\"dropdown-toggle\"\r\n                    onClick={() => setIsOpen(!isOpen)}\r\n                >\r\n                    <span>{currentSeason}</span>\r\n                    <span>▼</span>\r\n                </button>\r\n                {isOpen && (\r\n                    <div className=\"dropdown-menu\">\r\n                        {availableSeasons.map((season) => (\r\n                            <div\r\n                                key={season}\r\n                                className={`dropdown-item ${currentSeason === season ? 'active' : ''}`}\r\n                                onClick={() => {\r\n                                    setCurrentSeason(season);\r\n                                    setIsOpen(false);\r\n                                }}\r\n                            >\r\n                                {season}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"mainDiv\">\r\n                {isLoggedIn && (\r\n                    <div className='movie-row' id='movie-row-Home'>\r\n                        <>\r\n                            <div className=\"centreraCards\">\r\n                                <div className=\"componentDiv\">\r\n                                    <h3 className=\"msTitel\">{metadata?.Title || seriesName} ⭐{metadata?.imdbRating}</h3>\r\n                                    <ul className='tablist'>\r\n                                        <li\r\n                                            className={activeTab === 'Episodes' ? 'active' : ''}\r\n                                            onClick={() => setActiveTab('Episodes')}\r\n                                        >\r\n                                            Episodes\r\n                                        </li>\r\n                                        <li\r\n                                            className={activeTab === 'Suggested' ? 'active' : ''}\r\n                                            onClick={() => setActiveTab('Suggested')}\r\n                                        >\r\n                                            Suggested\r\n                                        </li>\r\n                                        <li\r\n                                            className={activeTab === 'Details' ? 'active' : ''}\r\n                                            onClick={() => setActiveTab('Details')}\r\n                                        >\r\n                                            Details\r\n                                        </li>\r\n                                    </ul>\r\n                                    {activeTab === 'Episodes' && (\r\n                                        <>\r\n                                            <div className=\"season-select-wrapper\">\r\n                                                <SeasonDropdown\r\n                                                    availableSeasons={availableSeasons}\r\n                                                    currentSeason={currentSeason}\r\n                                                    setCurrentSeason={setCurrentSeason}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"cards\" id=\"episodeCards\">\r\n                                                {episodes\r\n                                                    .sort((a, b) => {\r\n                                                        const getEpNum = (filename) => {\r\n                                                            const match = filename.match(/^(\\d+)\\./);\r\n                                                            return match ? parseInt(match[1], 10) : 0;\r\n                                                        };\r\n                                                        return getEpNum(a.filename) - getEpNum(b.filename);\r\n                                                    })\r\n                                                    .map((episode) => (\r\n                                                        <div\r\n                                                            className=\"movie-card\"\r\n                                                            key={episode.filename}\r\n                                                            onClick={() => {\r\n                                                                setSelectedMovie({\r\n                                                                    filename: episode.filename,\r\n                                                                    path: episode.path,\r\n                                                                    seriesName,\r\n                                                                });\r\n                                                            }}\r\n                                                        >\r\n                                                            <div className=\"hover-area\">\r\n                                                                <div className=\"image-container\">\r\n                                                                    <img\r\n                                                                        src={`${API_URL}/seriesPosters/${encodeURIComponent(seriesName)}.jpg`}\r\n                                                                        alt={seriesName}\r\n                                                                    />\r\n                                                                    <span className=\"movieTitle\">{episode.filename}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))}\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {activeTab === 'Suggested' && (\r\n                                        <div className=\"suggested-wrapper\">\r\n                                            <p>Suggested series based on genres: {metadata?.Genre || 'Unknown'}</p>\r\n                                            {/* You can later fetch and render actual suggested series here */}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {activeTab === 'Details' && (\r\n                                        <div className='details'>\r\n                                            <div className=\"details-wrapper\">\r\n                                                <div>\r\n                                                    <p className='detailsTitle'>Plot</p><p>{metadata?.Plot}</p></div>\r\n                                                <div>\r\n                                                    <p className='detailsTitle'>Released</p><p>{metadata?.Released}</p>\r\n                                                    <p className='detailsTitle'>Genre</p><p>{metadata?.Genre}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className='detailsTitle'>Director</p><p>{metadata?.Director}</p>\r\n                                                    <p className='detailsTitle'>Starring</p><p>{metadata?.Actors}</p>\r\n                                                    <p className='detailsTitle'>Awards</p><p>{metadata?.Awards}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {selectedMovie && (\r\n                                <VideoOverlay\r\n                                    path={selectedMovie.path}\r\n                                    onClose={() => setSelectedMovie(null)}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction VideoOverlay({ path = '', onClose }) {\r\n    if (!path) return null;\r\n\r\n    const token = localStorage.getItem('token');\r\n    const videoUrl = `${API_URL}/api/stream/file?path=${encodeURIComponent(path)}&token=${token}`;\r\n    return (\r\n        <div className=\"video-overlay\">\r\n            <div className=\"video-wrapper\">\r\n                <button className=\"close-button\" onClick={onClose}>✖</button>\r\n                <video controls autoPlay className=\"video-player\">\r\n                    <source src={videoUrl} type=\"video/mp4\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}