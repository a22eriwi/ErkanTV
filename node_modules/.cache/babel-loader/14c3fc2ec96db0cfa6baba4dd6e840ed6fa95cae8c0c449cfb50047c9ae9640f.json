{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction MovieRow({\n  title,\n  setSelectedMovie,\n  topPicks = false\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('');\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await fetch(`${API_URL}/api/movies`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const movieData = await res.json();\n        setMovies(movieData);\n      } catch (err) {\n        console.error('Error fetching movies:', err);\n      }\n    };\n    fetchMovies();\n  }, [topPicks]);\n  const genres = Array.from(new Set(movies.flatMap(m => {\n    var _m$genre;\n    return (_m$genre = m.genre) === null || _m$genre === void 0 ? void 0 : _m$genre.split(', ').filter(Boolean);\n  })));\n  const filteredMovies = movies.filter(movie => {\n    var _movie$title, _movie$genre, _movie$genre2;\n    const matchesSearch = ((_movie$title = movie.title) === null || _movie$title === void 0 ? void 0 : _movie$title.toLowerCase().includes(searchTerm.toLowerCase())) || ((_movie$genre = movie.genre) === null || _movie$genre === void 0 ? void 0 : _movie$genre.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesGenre = selectedGenre ? (_movie$genre2 = movie.genre) === null || _movie$genre2 === void 0 ? void 0 : _movie$genre2.includes(selectedGenre) : true;\n    return matchesSearch && matchesGenre;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msTitel\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sokDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search movie titles\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"msSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centreraCards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGenre(''),\n            className: !selectedGenre ? 'active' : '',\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGenre(genre),\n            className: selectedGenre === genre ? 'active' : '',\n            children: genre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centreraCards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => setSelectedMovie({\n            filename: movie.filename\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover-area\",\n            children: [movie.poster && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/moviePosters/${encodeURIComponent(movie.title)}.jpg`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movieTitle\",\n              children: [movie.title, \" \\u2B50\", movie.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, `${title}-${movie.filename}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieRow, \"tvcOIJ/cj2gomU+SlRg5EeK5jic=\");\n_c = MovieRow;\nexport default MovieRow;\nvar _c;\n$RefreshReg$(_c, \"MovieRow\");","map":{"version":3,"names":["useNavigate","React","useEffect","useState","useRef","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","MovieRow","title","setSelectedMovie","topPicks","_s","movies","setMovies","searchTerm","setSearchTerm","selectedGenre","setSelectedGenre","fetchMovies","token","localStorage","getItem","res","fetch","headers","Authorization","movieData","json","err","console","error","genres","Array","from","Set","flatMap","m","_m$genre","genre","split","filter","Boolean","filteredMovies","movie","_movie$title","_movie$genre","_movie$genre2","matchesSearch","toLowerCase","includes","matchesGenre","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","index","filename","poster","src","encodeURIComponent","alt","imdbRating","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/Movies.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction MovieRow({ title, setSelectedMovie, topPicks = false }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedGenre, setSelectedGenre] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/movies`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                const movieData = await res.json();\r\n\r\n                setMovies(movieData);\r\n            } catch (err) {\r\n                console.error('Error fetching movies:', err);\r\n            }\r\n        };\r\n\r\n        fetchMovies();\r\n    }, [topPicks]);\r\n\r\n    const genres = Array.from(new Set(movies.flatMap((m) => m.genre?.split(', ').filter(Boolean))));\r\n\r\n    const filteredMovies = movies.filter((movie) => {\r\n        const matchesSearch =\r\n            movie.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            movie.genre?.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n        const matchesGenre = selectedGenre ? movie.genre?.includes(selectedGenre) : true;\r\n\r\n        return matchesSearch && matchesGenre;\r\n    });\r\n\r\n    return (\r\n        <div className=\"movie-row\">\r\n            <h3 className=\"msTitel\">{title}</h3>\r\n            <div className=\"searchBox\">\r\n                <div className=\"sokDiv\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search movie titles\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"msSearch\"\r\n                    />\r\n                </div>\r\n                <div className=\"centreraCards\">\r\n                    <div className=\"genre-buttons\">\r\n                        <button onClick={() => setSelectedGenre('')} className={!selectedGenre ? 'active' : ''}>\r\n                            All\r\n                        </button>\r\n                        {genres.map((genre, index) => (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => setSelectedGenre(genre)}\r\n                                className={selectedGenre === genre ? 'active' : ''}\r\n                            >\r\n                                {genre}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"centreraCards\">\r\n                <div className=\"cards\">\r\n                    {filteredMovies.map((movie) => (\r\n                        <div\r\n                            className=\"movie-card\"\r\n                            key={`${title}-${movie.filename}`}\r\n                            onClick={() => setSelectedMovie({ filename: movie.filename })}\r\n                        >\r\n                            <div className=\"hover-area\">\r\n                                {movie.poster && (\r\n                                    <img\r\n                                        src={`/moviePosters/${encodeURIComponent(movie.title)}.jpg`}\r\n                                        alt={movie.title}\r\n                                    />\r\n                                )}\r\n                                <span className=\"movieTitle\">\r\n                                    {movie.title} ⭐{movie.imdbRating}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}