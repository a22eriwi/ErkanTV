{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\recentlyAddedRow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction RecentlyAddedRow({\n  title,\n  setSelectedMovie\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  const navigate = useNavigate();\n  const metadataCache = useRef({});\n  useEffect(() => {\n    const fetchRecent = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await fetch(`${API_URL}/api/recent-content`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        const enriched = await Promise.all(data.map(async item => {\n          const cacheKey = item.title;\n          if (metadataCache.current[cacheKey]) {\n            return {\n              ...item,\n              ...metadataCache.current[cacheKey]\n            };\n          }\n          let meta;\n          try {\n            if (item.type === 'movie') {\n              const res = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(item.title)}`);\n              meta = await res.json();\n            } else {\n              const res = await fetch`${API_URL}/api/stream/movie/${encodeURIComponent(item.folder)}/${encodeURIComponent(item.fileName)}?token=${token}`;\n              meta = await res.json();\n            }\n          } catch (err) {\n            console.warn(`Failed to load metadata for: ${item.title}`);\n            return item;\n          }\n          const metadata = {\n            title: meta.Title || item.title,\n            imdbRating: meta.imdbRating || 'N/A',\n            genre: meta.Genre || ''\n          };\n          metadataCache.current[cacheKey] = metadata;\n          return {\n            ...item,\n            ...metadata\n          };\n        }));\n        setItems(enriched);\n      } catch (err) {\n        console.error('Failed to load recent items:', err);\n      }\n    };\n    fetchRecent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centreraCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        id: \"homeCards\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          onClick: () => {\n            if (item.type === 'movie') {\n              setSelectedMovie({\n                filename: item.fileName,\n                folder: item.title // ✅ use title as folder name for movies\n              });\n              navigate(`?play=${encodeURIComponent(item.fileName)}&folder=${encodeURIComponent(item.title)}`);\n            } else {\n              navigate(`/series?name=${encodeURIComponent(item.seriesName)}`);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hover-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/moviePosters/${encodeURIComponent(item.folder)}.jpg`,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movieTitle\",\n              children: [item.title, \" \\u2B50\", item.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, `${item.type}-${item.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(RecentlyAddedRow, \"ol5QmqtmexoEY/hnDucvsqGgLqc=\", false, function () {\n  return [useNavigate];\n});\n_c = RecentlyAddedRow;\nexport default RecentlyAddedRow;\nvar _c;\n$RefreshReg$(_c, \"RecentlyAddedRow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","RecentlyAddedRow","title","setSelectedMovie","_s","items","setItems","navigate","metadataCache","fetchRecent","token","localStorage","getItem","res","fetch","headers","Authorization","data","json","enriched","Promise","all","map","item","cacheKey","current","meta","type","encodeURIComponent","folder","fileName","err","console","warn","metadata","Title","imdbRating","genre","Genre","error","className","children","_jsxFileName","lineNumber","columnNumber","id","onClick","filename","seriesName","src","alt","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/recentlyAddedRow.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction RecentlyAddedRow({ title, setSelectedMovie }) {\r\n    const [items, setItems] = useState([]);\r\n    const navigate = useNavigate();\r\n    const metadataCache = useRef({});\r\n\r\n    useEffect(() => {\r\n        const fetchRecent = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const res = await fetch(`${API_URL}/api/recent-content`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                const data = await res.json();\r\n\r\n                const enriched = await Promise.all(data.map(async (item) => {\r\n                    const cacheKey = item.title;\r\n\r\n                    if (metadataCache.current[cacheKey]) {\r\n                        return { ...item, ...metadataCache.current[cacheKey] };\r\n                    }\r\n\r\n                    let meta;\r\n                    try {\r\n                        if (item.type === 'movie') {\r\n                            const res = await fetch(`${API_URL}/api/metadata/${encodeURIComponent(item.title)}`);\r\n                            meta = await res.json();\r\n                        } else {\r\n                            const res = await fetch`${API_URL}/api/stream/movie/${encodeURIComponent(item.folder)}/${encodeURIComponent(item.fileName)}?token=${token}`\r\n                            meta = await res.json();\r\n                        }\r\n                    } catch (err) {\r\n                        console.warn(`Failed to load metadata for: ${item.title}`);\r\n                        return item;\r\n                    }\r\n\r\n                    const metadata = {\r\n                        title: meta.Title || item.title,\r\n                        imdbRating: meta.imdbRating || 'N/A',\r\n                        genre: meta.Genre || '',\r\n                    };\r\n\r\n                    metadataCache.current[cacheKey] = metadata;\r\n\r\n                    return { ...item, ...metadata };\r\n                }));\r\n\r\n                setItems(enriched);\r\n            } catch (err) {\r\n                console.error('Failed to load recent items:', err);\r\n            }\r\n        };\r\n\r\n        fetchRecent();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='centreraCards'>\r\n            <div className='homeComponent'>\r\n                <h3>{title}</h3>\r\n                <div className=\"cards\" id='homeCards'>\r\n                    {items.map(item => (\r\n                        <div\r\n                            key={`${item.type}-${item.title}`}\r\n                            className=\"movie-card\"\r\n                            onClick={() => {\r\n                                if (item.type === 'movie') {\r\n                                    setSelectedMovie({\r\n                                        filename: item.fileName,\r\n                                        folder: item.title // ✅ use title as folder name for movies\r\n                                    });\r\n                                    navigate(`?play=${encodeURIComponent(item.fileName)}&folder=${encodeURIComponent(item.title)}`);\r\n                                } else {\r\n                                    navigate(`/series?name=${encodeURIComponent(item.seriesName)}`);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <div className=\"hover-area\">\r\n                            <img\r\n  src={`/moviePosters/${encodeURIComponent(item.folder)}.jpg`}\r\n  alt={item.title}\r\n/>\r\n                                <span className='movieTitle'>{item.title} ⭐{item.imdbRating}</span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentlyAddedRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}