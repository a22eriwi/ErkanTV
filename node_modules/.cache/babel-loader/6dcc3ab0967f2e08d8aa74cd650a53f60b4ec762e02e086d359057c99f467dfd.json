{"ast":null,"code":"var _jsxFileName = \"D:\\\\ErkanTV\\\\src\\\\Frontend\\\\MoviePage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/MoviePage.js\nimport { useAuth } from '../authContext';\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport api from '../Api';\nimport ProgressBar from '../Components/ProgressBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RenderMoviePage() {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  if (!isLoggedIn) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn && /*#__PURE__*/_jsxDEV(MoviePage, {\n      title: \"MoviePage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n}\n_s(RenderMoviePage, \"Jbx0LrCfdz/EDenJV2YbpvzQ6CY=\", false, function () {\n  return [useAuth];\n});\n_c = RenderMoviePage;\nfunction MoviePage() {\n  _s2();\n  var _metadata$Actors;\n  const {\n    isLoggedIn\n  } = useAuth();\n  const {\n    movieFolder\n  } = useParams();\n  const [metadata, setMetadata] = useState(null);\n  const [activeTab, setActiveTab] = useState('Suggested');\n  const [suggestedMovies, setSuggestedMovies] = useState([]);\n  const navigate = useNavigate();\n  const metadataCache = useRef({});\n  const [progress, setProgress] = useState({\n    time: 0,\n    duration: 0\n  });\n  useEffect(() => {\n    if (!movieFolder) return;\n    const fetchMetadata = async () => {\n      try {\n        const res = await api.get(`/api/movie-metadata/${encodeURIComponent(movieFolder)}`);\n        const data = res.data;\n        setMetadata(data);\n        metadataCache.current[data.Title] = {\n          genre: data.Genre || ''\n        };\n      } catch (err) {\n        console.error('Failed to fetch movie metadata:', err);\n      }\n    };\n    fetchMetadata();\n  }, [movieFolder]);\n  useEffect(() => {\n    const fetchProgress = async () => {\n      if (!(metadata !== null && metadata !== void 0 && metadata.filename)) return;\n      try {\n        var _res$data, _res$data2;\n        const res = await api.get(`/api/progress?fileName=${encodeURIComponent(metadata.filename)}`);\n        const time = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.time) || 0;\n        const dur = ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.duration) || 0;\n        setProgress({\n          time,\n          duration: dur\n        });\n      } catch (err) {\n        console.warn('No progress found for this movie.');\n      }\n    };\n    fetchProgress();\n  }, [metadata]);\n  useEffect(() => {\n    if (!(metadata !== null && metadata !== void 0 && metadata.Genre)) return;\n    const fetchSuggested = async () => {\n      try {\n        const [movieListRes, metaRes] = await Promise.all([api.get('/api/movies'), api.get('/api/movie-metadata')]);\n        const movieList = movieListRes.data;\n        const allMetadata = metaRes.data;\n        Object.values(allMetadata).forEach(meta => {\n          metadataCache.current[meta.Title] = {\n            genre: meta.Genre || '',\n            filename: meta.filename\n          };\n        });\n        const currentGenres = metadata.Genre.split(',').map(g => g.trim().toLowerCase());\n        const filteredSuggestions = movieList.filter(({\n          title,\n          folder\n        }) => {\n          const meta = metadataCache.current[title];\n          if (!meta || folder === movieFolder) return false;\n          const otherGenres = meta.genre.split(',').map(g => g.trim().toLowerCase());\n          return currentGenres.some(g => otherGenres.includes(g));\n        });\n\n        // Fetch progress in parallel for each suggested movie\n        const withProgress = await Promise.all(filteredSuggestions.map(async movie => {\n          const meta = metadataCache.current[movie.title];\n          let progress = null;\n          if (meta !== null && meta !== void 0 && meta.filename) {\n            try {\n              const res = await api.get(`/api/progress?fileName=${encodeURIComponent(meta.filename)}`);\n              progress = res.data || null;\n            } catch {\n              // no progress found — ignore\n            }\n          }\n          return {\n            ...movie,\n            progress\n          };\n        }));\n        setSuggestedMovies(withProgress);\n      } catch (err) {\n        console.error('❌ Error fetching suggested movies or progress:', err);\n      }\n    };\n    fetchSuggested();\n  }, [metadata, movieFolder]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        id: \"movie-row-Home\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centreraCards\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"componentDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieComponent\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"msTitel\",\n                children: [(metadata === null || metadata === void 0 ? void 0 : metadata.Title) || movieFolder, \" \\u2B50\", metadata === null || metadata === void 0 ? void 0 : metadata.imdbRating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movieWrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"poster\",\n                  src: `${api.defaults.baseURL}/moviePosters/${encodeURIComponent(movieFolder)}.jpg`,\n                  alt: metadata.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  time: progress.time,\n                  duration: progress.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-button\",\n                onClick: () => navigate(`/watch?movie=${encodeURIComponent(movieFolder)}`),\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u25B6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: progress.time > 0 ? 'Resume' : 'Play'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tablist\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: activeTab === 'Suggested' ? 'active' : '',\n                onClick: () => setActiveTab('Suggested'),\n                children: \"Suggested\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: activeTab === 'Details' ? 'active' : '',\n                onClick: () => setActiveTab('Details'),\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), activeTab === 'Suggested' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              id: \"suggestedCards\",\n              children: suggestedMovies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No suggestions found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this) : suggestedMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-card\",\n                onClick: () => navigate(`/movies/${encodeURIComponent(movie.folder)}`),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hover-area\",\n                  id: \"outlineComponent\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${api.defaults.baseURL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`,\n                    alt: movie.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this)\n              }, movie.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), activeTab === 'Details' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plot\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"detailsTitle\",\n                    children: \"Plot:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: metadata === null || metadata === void 0 ? void 0 : metadata.Plot\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"genre\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Released:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Released\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"detailsTitle\",\n                    children: \"Genre:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: metadata === null || metadata === void 0 ? void 0 : metadata.Genre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"starring\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Director:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Director\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Starring:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : (_metadata$Actors = metadata.Actors) === null || _metadata$Actors === void 0 ? void 0 : _metadata$Actors.split(',').map((actor, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: actor.trim()\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Awards:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Awards\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s2(MoviePage, \"OwuKaQ5aQkjqRn9gJJJ3ZXW77Ik=\", false, function () {\n  return [useAuth, useParams, useNavigate];\n});\n_c2 = MoviePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderMoviePage\");\n$RefreshReg$(_c2, \"MoviePage\");","map":{"version":3,"names":["useAuth","useEffect","useState","useRef","useParams","useNavigate","Header","api","ProgressBar","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderMoviePage","_s","isLoggedIn","children","MoviePage","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","_metadata$Actors","movieFolder","metadata","setMetadata","activeTab","setActiveTab","suggestedMovies","setSuggestedMovies","navigate","metadataCache","progress","setProgress","time","duration","fetchMetadata","res","get","encodeURIComponent","data","current","Title","genre","Genre","err","console","error","fetchProgress","filename","_res$data","_res$data2","dur","warn","fetchSuggested","movieListRes","metaRes","Promise","all","movieList","allMetadata","Object","values","forEach","meta","currentGenres","split","map","g","trim","toLowerCase","filteredSuggestions","filter","folder","otherGenres","some","includes","withProgress","movie","className","id","imdbRating","src","defaults","baseURL","alt","onClick","length","Plot","Released","Director","Actors","actor","i","Awards","_c2","$RefreshReg$"],"sources":["D:/ErkanTV/src/Frontend/MoviePage.js"],"sourcesContent":["// src/components/MoviePage.js\r\nimport { useAuth } from '../authContext';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport api from '../Api';\r\nimport ProgressBar from '../Components/ProgressBar';\r\n\r\nexport default function RenderMoviePage() {\r\n  const { isLoggedIn } = useAuth();\r\n  if (!isLoggedIn) return null;\r\n  return (\r\n    <>\r\n      {isLoggedIn && <MoviePage title=\"MoviePage\" />}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction MoviePage() {\r\n  const { isLoggedIn } = useAuth();\r\n  const { movieFolder } = useParams();\r\n  const [metadata, setMetadata] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('Suggested');\r\n  const [suggestedMovies, setSuggestedMovies] = useState([]);\r\n  const navigate = useNavigate();\r\n  const metadataCache = useRef({});\r\n  const [progress, setProgress] = useState({ time: 0, duration: 0 });\r\n\r\n\r\n  useEffect(() => {\r\n    if (!movieFolder) return;\r\n\r\n    const fetchMetadata = async () => {\r\n      try {\r\n        const res = await api.get(`/api/movie-metadata/${encodeURIComponent(movieFolder)}`);\r\n        const data = res.data;\r\n        setMetadata(data);\r\n        metadataCache.current[data.Title] = {\r\n          genre: data.Genre || '',\r\n        };\r\n      } catch (err) {\r\n        console.error('Failed to fetch movie metadata:', err);\r\n      }\r\n    };\r\n\r\n    fetchMetadata();\r\n  }, [movieFolder]);\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      if (!metadata?.filename) return;\r\n\r\n      try {\r\n        const res = await api.get(`/api/progress?fileName=${encodeURIComponent(metadata.filename)}`);\r\n        const time = res.data?.time || 0;\r\n        const dur = res.data?.duration || 0;\r\n        setProgress({ time, duration: dur });\r\n      } catch (err) {\r\n        console.warn('No progress found for this movie.');\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n  }, [metadata]);\r\n\r\n  useEffect(() => {\r\n    if (!metadata?.Genre) return;\r\n\r\n    const fetchSuggested = async () => {\r\n      try {\r\n        const [movieListRes, metaRes] = await Promise.all([\r\n          api.get('/api/movies'),\r\n          api.get('/api/movie-metadata'),\r\n        ]);\r\n\r\n        const movieList = movieListRes.data;\r\n        const allMetadata = metaRes.data;\r\n\r\n        Object.values(allMetadata).forEach((meta) => {\r\n          metadataCache.current[meta.Title] = {\r\n            genre: meta.Genre || '',\r\n            filename: meta.filename,\r\n          };\r\n        });\r\n\r\n        const currentGenres = metadata.Genre.split(',').map((g) => g.trim().toLowerCase());\r\n\r\n        const filteredSuggestions = movieList.filter(({ title, folder }) => {\r\n          const meta = metadataCache.current[title];\r\n          if (!meta || folder === movieFolder) return false;\r\n          const otherGenres = meta.genre.split(',').map((g) => g.trim().toLowerCase());\r\n          return currentGenres.some((g) => otherGenres.includes(g));\r\n        });\r\n\r\n        // Fetch progress in parallel for each suggested movie\r\n        const withProgress = await Promise.all(\r\n          filteredSuggestions.map(async (movie) => {\r\n            const meta = metadataCache.current[movie.title];\r\n            let progress = null;\r\n\r\n            if (meta?.filename) {\r\n              try {\r\n                const res = await api.get(`/api/progress?fileName=${encodeURIComponent(meta.filename)}`);\r\n                progress = res.data || null;\r\n              } catch {\r\n                // no progress found — ignore\r\n              }\r\n            }\r\n\r\n            return {\r\n              ...movie,\r\n              progress,\r\n            };\r\n          })\r\n        );\r\n\r\n        setSuggestedMovies(withProgress);\r\n      } catch (err) {\r\n        console.error('❌ Error fetching suggested movies or progress:', err);\r\n      }\r\n    };\r\n\r\n    fetchSuggested();\r\n  }, [metadata, movieFolder]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {isLoggedIn && (\r\n        <div className=\"mainDiv\">\r\n          <div className=\"movie-row\" id=\"movie-row-Home\">\r\n            <div className=\"centreraCards\">\r\n              <div className=\"componentDiv\">\r\n                <div className='movieComponent'>\r\n                  <h3 className=\"msTitel\">\r\n                    {metadata?.Title || movieFolder} ⭐{metadata?.imdbRating}\r\n                  </h3>\r\n                  {metadata && (\r\n                    <div className=\"movieWrapper\">\r\n                      <img\r\n                        className=\"poster\"\r\n                        src={`${api.defaults.baseURL}/moviePosters/${encodeURIComponent(movieFolder)}.jpg`}\r\n                        alt={metadata.Title}\r\n                      />\r\n                      <ProgressBar\r\n                        time={progress.time}\r\n                        duration={progress.duration}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <button\r\n                    className=\"play-button\"\r\n                    onClick={() => navigate(`/watch?movie=${encodeURIComponent(movieFolder)}`)}\r\n                  >\r\n                    <p>▶</p>\r\n                    <p>{progress.time > 0 ? 'Resume' : 'Play'}</p>\r\n                  </button>\r\n                </div>\r\n\r\n                <ul className=\"tablist\">\r\n                  <li\r\n                    className={activeTab === 'Suggested' ? 'active' : ''}\r\n                    onClick={() => setActiveTab('Suggested')}\r\n                  >\r\n                    Suggested\r\n                  </li>\r\n                  <li\r\n                    className={activeTab === 'Details' ? 'active' : ''}\r\n                    onClick={() => setActiveTab('Details')}\r\n                  >\r\n                    Details\r\n                  </li>\r\n                </ul>\r\n\r\n                {activeTab === 'Suggested' && (\r\n                  <div className=\"cards\" id=\"suggestedCards\">\r\n                    {suggestedMovies.length === 0 ? (\r\n                      <p>No suggestions found.</p>\r\n                    ) : (\r\n                      suggestedMovies.map((movie) => (\r\n                        <div\r\n                          key={movie.filename}\r\n                          className=\"movie-card\"\r\n                          onClick={() =>\r\n                            navigate(`/movies/${encodeURIComponent(movie.folder)}`)\r\n                          }\r\n                        >\r\n                          <div className=\"hover-area\" id='outlineComponent'>\r\n                            <img\r\n                              src={`${api.defaults.baseURL}/moviePosters/${encodeURIComponent(movie.folder)}.jpg`}\r\n                              alt={movie.title}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === 'Details' && (\r\n                  <div className=\"details\">\r\n                    <div className=\"details-wrapper\">\r\n                      <div className=\"plot\">\r\n                        <p className=\"detailsTitle\">Plot:</p>\r\n                        <p>{metadata?.Plot}</p>\r\n                      </div>\r\n                      <div className=\"genre\">\r\n                        <div className=\"detailsDiv\">\r\n                          <p className=\"detailsTitle\">Released:</p>\r\n                          <p>{metadata?.Released}</p>\r\n                        </div>\r\n                        <p className=\"detailsTitle\">Genre:</p>\r\n                        <p>{metadata?.Genre}</p>\r\n                      </div>\r\n                      <div className=\"starring\">\r\n                        <div className=\"detailsDiv\">\r\n                          <p className=\"detailsTitle\">Director:</p>\r\n                          <p>{metadata?.Director}</p>\r\n                        </div>\r\n                        <div className=\"detailsDiv\">\r\n                          <p className=\"detailsTitle\">Starring:</p>\r\n                          <div>\r\n                            {metadata?.Actors?.split(',').map((actor, i) => (\r\n                              <p key={i}>{actor.trim()}</p>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"detailsDiv\">\r\n                          <p className=\"detailsTitle\">Awards:</p>\r\n                          <p>{metadata?.Awards}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}