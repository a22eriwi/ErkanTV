{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true\n});\n\n// Attach token to every request if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nlet isRefreshing = false;\nlet failedQueue = [];\nconst processQueue = (error, token = null) => {\n  failedQueue.forEach(prom => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\napi.interceptors.response.use(res => res, async err => {\n  var _err$response;\n  const originalRequest = err.config;\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401 || originalRequest._retry) {\n    return Promise.reject(err);\n  }\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return Promise.reject(err);\n  }\n  originalRequest._retry = true;\n  if (isRefreshing) {\n    return new Promise((resolve, reject) => {\n      failedQueue.push({\n        resolve,\n        reject\n      });\n    }).then(token => {\n      originalRequest.headers['Authorization'] = `Bearer ${token}`;\n      return api(originalRequest);\n    }).catch(err => Promise.reject(err));\n  }\n  isRefreshing = true;\n  try {\n    const response = await api.post('/api/token');\n    const newToken = response.data.accessToken;\n    localStorage.setItem('token', newToken);\n    api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    processQueue(null, newToken);\n    return api(originalRequest);\n  } catch (refreshError) {\n    processQueue(refreshError, null);\n    return Promise.reject(refreshError);\n  } finally {\n    isRefreshing = false;\n  }\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","isRefreshing","failedQueue","processQueue","forEach","prom","resolve","response","res","err","_err$response","originalRequest","status","_retry","push","then","catch","post","newToken","data","accessToken","setItem","defaults","common","refreshError"],"sources":["D:/Erkflix/src/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  withCredentials: true,\r\n});\r\n\r\n// Attach token to every request if it exists\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nlet isRefreshing = false;\r\nlet failedQueue = [];\r\n\r\nconst processQueue = (error, token = null) => {\r\n  failedQueue.forEach(prom => {\r\n    if (error) {\r\n      prom.reject(error);\r\n    } else {\r\n      prom.resolve(token);\r\n    }\r\n  });\r\n  failedQueue = [];\r\n};\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  async err => {\r\n    const originalRequest = err.config;\r\n\r\n    if (err.response?.status !== 401 || originalRequest._retry) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    originalRequest._retry = true;\r\n\r\n    if (isRefreshing) {\r\n      return new Promise((resolve, reject) => {\r\n        failedQueue.push({ resolve, reject });\r\n      }).then(token => {\r\n        originalRequest.headers['Authorization'] = `Bearer ${token}`;\r\n        return api(originalRequest);\r\n      }).catch(err => Promise.reject(err));\r\n    }\r\n\r\n    isRefreshing = true;\r\n\r\n    try {\r\n      const response = await api.post('/api/token');\r\n      const newToken = response.data.accessToken;\r\n      localStorage.setItem('token', newToken);\r\n\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      processQueue(null, newToken);\r\n      return api(originalRequest);\r\n    } catch (refreshError) {\r\n      processQueue(refreshError, null);\r\n      return Promise.reject(refreshError);\r\n    } finally {\r\n      isRefreshing = false;\r\n    }\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}