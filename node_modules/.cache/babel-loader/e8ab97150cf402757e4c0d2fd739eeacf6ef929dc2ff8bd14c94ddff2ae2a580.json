{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n          logout();\n        } else {\n          setUser(decoded);\n          setIsLoggedIn(true);\n\n          // Set timeout to auto-logout right when the token expires\n          const timeout = (decoded.exp - currentTime) * 1000;\n          const logoutTimer = setTimeout(() => logout(), timeout);\n          return () => clearTimeout(logoutTimer); // Clear on cleanup\n        }\n      } catch (err) {\n        console.error('Invalid token:', err);\n        logout();\n      }\n    }\n  }, []);\n  let logoutTimer;\n  const login = token => {\n    localStorage.setItem('token', token);\n    const decoded = jwtDecode(token);\n    setUser(decoded);\n    setIsLoggedIn(true);\n    clearTimeout(logoutTimer);\n    const timeout = (decoded.exp - Date.now() / 1000) * 1000;\n    logoutTimer = setTimeout(() => logout(), timeout);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"4bYv/j5yOMazbJb4xFyUTJyGHFM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","decoded","currentTime","Date","now","exp","logout","timeout","logoutTimer","setTimeout","clearTimeout","err","console","error","login","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Erkflix/src/authContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n\r\n        if (decoded.exp < currentTime) {\r\n          logout();\r\n        } else {\r\n          setUser(decoded);\r\n          setIsLoggedIn(true);\r\n\r\n          // Set timeout to auto-logout right when the token expires\r\n          const timeout = (decoded.exp - currentTime) * 1000;\r\n          const logoutTimer = setTimeout(() => logout(), timeout);\r\n\r\n          return () => clearTimeout(logoutTimer); // Clear on cleanup\r\n        }\r\n      } catch (err) {\r\n        console.error('Invalid token:', err);\r\n        logout();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  let logoutTimer;\r\n\r\n  const login = (token) => {\r\n    localStorage.setItem('token', token);\r\n    const decoded = jwtDecode(token);\r\n    setUser(decoded);\r\n    setIsLoggedIn(true);\r\n  \r\n    clearTimeout(logoutTimer);\r\n    const timeout = (decoded.exp - Date.now() / 1000) * 1000;\r\n    logoutTimer = setTimeout(() => logout(), timeout);\r\n  };\r\n  \r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASQ,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAO,GAAGd,SAAS,CAACW,KAAK,CAAC;QAChC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;QAErC,IAAIH,OAAO,CAACI,GAAG,GAAGH,WAAW,EAAE;UAC7BI,MAAM,CAAC,CAAC;QACV,CAAC,MAAM;UACLX,OAAO,CAACM,OAAO,CAAC;UAChBJ,aAAa,CAAC,IAAI,CAAC;;UAEnB;UACA,MAAMU,OAAO,GAAG,CAACN,OAAO,CAACI,GAAG,GAAGH,WAAW,IAAI,IAAI;UAClD,MAAMM,WAAW,GAAGC,UAAU,CAAC,MAAMH,MAAM,CAAC,CAAC,EAAEC,OAAO,CAAC;UAEvD,OAAO,MAAMG,YAAY,CAACF,WAAW,CAAC,CAAC,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;QACpCL,MAAM,CAAC,CAAC;MACV;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIE,WAAW;EAEf,MAAMM,KAAK,GAAIhB,KAAK,IAAK;IACvBC,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEjB,KAAK,CAAC;IACpC,MAAMG,OAAO,GAAGd,SAAS,CAACW,KAAK,CAAC;IAChCH,OAAO,CAACM,OAAO,CAAC;IAChBJ,aAAa,CAAC,IAAI,CAAC;IAEnBa,YAAY,CAACF,WAAW,CAAC;IACzB,MAAMD,OAAO,GAAG,CAACN,OAAO,CAACI,GAAG,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI;IACxDI,WAAW,GAAGC,UAAU,CAAC,MAAMH,MAAM,CAAC,CAAC,EAAEC,OAAO,CAAC;EACnD,CAAC;EAGD,MAAMD,MAAM,GAAGA,CAAA,KAAM;IACnBP,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChCrB,OAAO,CAAC,IAAI,CAAC;IACbE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,IAAI;MAAEE,UAAU;MAAEkB,KAAK;MAAER;IAAO,CAAE;IAAAd,QAAA,EAC9DA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC7B,EAAA,CAvDeF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyD5B,OAAO,MAAMiC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzC,UAAU,CAACM,WAAW,CAAC;AAAA;AAACmC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}