{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Frontend\\\\SeriesPage.js\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useAuth } from '../authContext';\nimport { useState, useRef, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport api from '../Api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction renderSeriesPage() {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn && /*#__PURE__*/_jsxDEV(SeriesPage, {\n      title: \"SeriesPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 28\n    }, this)\n  }, void 0, false);\n}\n_s(renderSeriesPage, \"Jbx0LrCfdz/EDenJV2YbpvzQ6CY=\", false, function () {\n  return [useAuth];\n});\nfunction SeriesPage() {\n  _s3();\n  var _s2 = $RefreshSig$(),\n    _metadata$Actors;\n  const {\n    isLoggedIn\n  } = useAuth();\n  const {\n    seriesName\n  } = useParams();\n  const navigate = useNavigate();\n  const [metadata, setMetadata] = useState(null);\n  const [episodes, setEpisodes] = useState([]);\n  const [availableSeasons, setAvailableSeasons] = useState([]);\n  const [currentSeason, setCurrentSeason] = useState('');\n  const [activeTab, setActiveTab] = useState('Episodes');\n  const [suggestedSeries, setSuggestedSeries] = useState([]);\n  const [seasonMap, setSeasonMap] = useState({});\n  useEffect(() => {\n    if (!seriesName) return;\n    const fetchMetadata = async () => {\n      try {\n        const res = await api.get(`/api/series-metadata/${encodeURIComponent(seriesName)}`);\n        setMetadata(res.data);\n      } catch (err) {\n        console.error('❌ Failed to fetch series metadata:', err);\n      }\n    };\n    const fetchSeasons = async () => {\n      try {\n        const res = await api.get(`/api/series/${encodeURIComponent(seriesName)}`);\n        const data = res.data;\n        const grouped = {};\n        for (const {\n          season,\n          episodes\n        } of data.seasons) {\n          grouped[season] = episodes;\n        }\n        const allSeasons = Object.keys(grouped);\n        setSeasonMap(grouped);\n        setAvailableSeasons(allSeasons);\n        setCurrentSeason(allSeasons[0]);\n        setEpisodes(grouped[allSeasons[0]]);\n      } catch (err) {\n        console.error('❌ Failed to fetch seasons:', err);\n      }\n    };\n    fetchMetadata();\n    fetchSeasons();\n  }, [seriesName]);\n  useEffect(() => {\n    if (!(metadata !== null && metadata !== void 0 && metadata.Genre)) return;\n    const fetchSuggested = async () => {\n      try {\n        const res = await api.get('/api/series-metadata');\n        const allMetadata = res.data;\n        const currentGenres = metadata.Genre.split(',').map(g => g.trim().toLowerCase());\n        const suggestions = Object.entries(allMetadata).filter(([folder, data]) => {\n          if (folder === seriesName) return false;\n          if (!data.Genre) return false;\n          const otherGenres = data.Genre.split(',').map(g => g.trim().toLowerCase());\n          return currentGenres.some(g => otherGenres.includes(g));\n        }).map(([folder, data]) => ({\n          folder,\n          title: data.Title,\n          poster: data.Poster\n        }));\n        setSuggestedSeries(suggestions);\n      } catch (err) {\n        console.error('❌ Error fetching suggested series:', err);\n      }\n    };\n    fetchSuggested();\n  }, [metadata, seriesName]);\n  useEffect(() => {\n    if (currentSeason && seasonMap[currentSeason]) {\n      setEpisodes(seasonMap[currentSeason]);\n    }\n  }, [currentSeason, seasonMap]);\n  function SeasonDropdown({\n    availableSeasons,\n    currentSeason,\n    setCurrentSeason\n  }) {\n    _s2();\n    const [isOpen, setIsOpen] = useState(false);\n    const dropdownRef = useRef();\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"season-dropdown\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        onClick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentSeason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: availableSeasons.map(season => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dropdown-item ${currentSeason === season ? 'active' : ''}`,\n          onClick: () => {\n            setCurrentSeason(season);\n            setIsOpen(false);\n          },\n          children: season\n        }, season, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n  _s2(SeasonDropdown, \"uhOyve9TWk+bvhPJTPlaMsUEQAY=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        id: \"movie-row-Home\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centreraCards\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"componentDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"msTitel\",\n              children: [(metadata === null || metadata === void 0 ? void 0 : metadata.Title) || seriesName, \" \\u2B50\", metadata === null || metadata === void 0 ? void 0 : metadata.imdbRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tablist\",\n              children: ['Episodes', 'Suggested', 'Details'].map(tab => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: activeTab === tab ? 'active' : '',\n                onClick: () => setActiveTab(tab),\n                children: tab\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), activeTab === 'Episodes' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"season-select-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(SeasonDropdown, {\n                  availableSeasons: availableSeasons,\n                  currentSeason: currentSeason,\n                  setCurrentSeason: setCurrentSeason\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards\",\n                id: \"episodeCards\",\n                children: episodes.sort((a, b) => {\n                  const getEpNum = title => {\n                    const match = title.match(/^(\\d+)[. -]?/);\n                    return match ? parseInt(match[1], 10) : 0;\n                  };\n                  return getEpNum(a.title) - getEpNum(b.title);\n                }).map(episode => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-card\",\n                  onClick: () => navigate(`/watch?path=${encodeURIComponent(episode.path)}`),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hover-area\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"image-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(seriesName)}.jpg`,\n                        alt: episode.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"movieTitle\",\n                        children: episode.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 57\n                  }, this)\n                }, episode.path, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true), activeTab === 'Suggested' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              id: \"suggestedCards\",\n              children: suggestedSeries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No suggestions found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this) : suggestedSeries.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-card\",\n                onClick: () => window.location.href = `/series/${encodeURIComponent(s.folder)}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hover-area\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(s.folder)}.jpg`,\n                    alt: s.title || s.folder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 53\n                }, this)\n              }, s.folder, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this), activeTab === 'Details' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plot\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"detailsTitle\",\n                    children: \"Plot:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: metadata === null || metadata === void 0 ? void 0 : metadata.Plot\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"genre\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Released:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Released\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"detailsTitle\",\n                    children: \"Genre:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: metadata === null || metadata === void 0 ? void 0 : metadata.Genre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"starring\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Director:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Director\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Starring:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : (_metadata$Actors = metadata.Actors) === null || _metadata$Actors === void 0 ? void 0 : _metadata$Actors.split(',').map((actor, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: actor.trim()\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsDiv\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Awards:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Awards\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s3(SeriesPage, \"qELY28NYeyKWGM79PX+7pN0mi1E=\", false, function () {\n  return [useAuth, useParams, useNavigate];\n});\n_c = SeriesPage;\nexport default renderSeriesPage;\nvar _c;\n$RefreshReg$(_c, \"SeriesPage\");","map":{"version":3,"names":["useAuth","useState","useRef","useEffect","useParams","useNavigate","Header","api","jsxDEV","_jsxDEV","Fragment","_Fragment","renderSeriesPage","_s","isLoggedIn","children","SeriesPage","title","fileName","_jsxFileName","lineNumber","columnNumber","_s3","_s2","$RefreshSig$","_metadata$Actors","seriesName","navigate","metadata","setMetadata","episodes","setEpisodes","availableSeasons","setAvailableSeasons","currentSeason","setCurrentSeason","activeTab","setActiveTab","suggestedSeries","setSuggestedSeries","seasonMap","setSeasonMap","fetchMetadata","res","get","encodeURIComponent","data","err","console","error","fetchSeasons","grouped","season","seasons","allSeasons","Object","keys","Genre","fetchSuggested","allMetadata","currentGenres","split","map","g","trim","toLowerCase","suggestions","entries","filter","folder","otherGenres","some","includes","Title","poster","Poster","SeasonDropdown","isOpen","setIsOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","onClick","id","imdbRating","tab","sort","a","b","getEpNum","match","parseInt","episode","path","src","defaults","baseURL","alt","length","s","window","location","href","Plot","Released","Director","Actors","actor","i","Awards","_c","$RefreshReg$"],"sources":["D:/Erkflix/src/Frontend/SeriesPage.js"],"sourcesContent":["import { useAuth } from '../authContext';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport api from '../Api';\r\n\r\n function renderSeriesPage() {\r\n    const { isLoggedIn } = useAuth();\r\n    return (\r\n        <>\r\n            {isLoggedIn && <SeriesPage title=\"SeriesPage\" />}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SeriesPage() {\r\n    const { isLoggedIn } = useAuth();\r\n    const { seriesName } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [metadata, setMetadata] = useState(null);\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const [availableSeasons, setAvailableSeasons] = useState([]);\r\n    const [currentSeason, setCurrentSeason] = useState('');\r\n    const [activeTab, setActiveTab] = useState('Episodes');\r\n    const [suggestedSeries, setSuggestedSeries] = useState([]);\r\n    const [seasonMap, setSeasonMap] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!seriesName) return;\r\n\r\n        const fetchMetadata = async () => {\r\n            try {\r\n                const res = await api.get(`/api/series-metadata/${encodeURIComponent(seriesName)}`);\r\n                setMetadata(res.data);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch series metadata:', err);\r\n            }\r\n        };\r\n\r\n        const fetchSeasons = async () => {\r\n            try {\r\n                const res = await api.get(`/api/series/${encodeURIComponent(seriesName)}`);\r\n                const data = res.data;\r\n\r\n                const grouped = {};\r\n                for (const { season, episodes } of data.seasons) {\r\n                    grouped[season] = episodes;\r\n                }\r\n\r\n                const allSeasons = Object.keys(grouped);\r\n                setSeasonMap(grouped);\r\n                setAvailableSeasons(allSeasons);\r\n                setCurrentSeason(allSeasons[0]);\r\n                setEpisodes(grouped[allSeasons[0]]);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch seasons:', err);\r\n            }\r\n        };\r\n\r\n        fetchMetadata();\r\n        fetchSeasons();\r\n    }, [seriesName]);\r\n\r\n    useEffect(() => {\r\n        if (!metadata?.Genre) return;\r\n\r\n        const fetchSuggested = async () => {\r\n            try {\r\n                const res = await api.get('/api/series-metadata');\r\n                const allMetadata = res.data;\r\n\r\n                const currentGenres = metadata.Genre.split(',').map((g) => g.trim().toLowerCase());\r\n\r\n                const suggestions = Object.entries(allMetadata)\r\n                    .filter(([folder, data]) => {\r\n                        if (folder === seriesName) return false;\r\n                        if (!data.Genre) return false;\r\n                        const otherGenres = data.Genre.split(',').map((g) => g.trim().toLowerCase());\r\n                        return currentGenres.some((g) => otherGenres.includes(g));\r\n                    })\r\n                    .map(([folder, data]) => ({\r\n                        folder,\r\n                        title: data.Title,\r\n                        poster: data.Poster,\r\n                    }));\r\n\r\n                setSuggestedSeries(suggestions);\r\n            } catch (err) {\r\n                console.error('❌ Error fetching suggested series:', err);\r\n            }\r\n        };\r\n\r\n        fetchSuggested();\r\n    }, [metadata, seriesName]);\r\n\r\n    useEffect(() => {\r\n        if (currentSeason && seasonMap[currentSeason]) {\r\n            setEpisodes(seasonMap[currentSeason]);\r\n        }\r\n    }, [currentSeason, seasonMap]);\r\n\r\n    function SeasonDropdown({ availableSeasons, currentSeason, setCurrentSeason }) {\r\n        const [isOpen, setIsOpen] = useState(false);\r\n        const dropdownRef = useRef();\r\n\r\n        useEffect(() => {\r\n            const handleClickOutside = (event) => {\r\n                if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                    setIsOpen(false);\r\n                }\r\n            };\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n            return () => document.removeEventListener('mousedown', handleClickOutside);\r\n        }, []);\r\n\r\n        return (\r\n            <div className=\"season-dropdown\" ref={dropdownRef}>\r\n                <button className=\"dropdown-toggle\" onClick={() => setIsOpen(!isOpen)}>\r\n                    <span>{currentSeason}</span>\r\n                    <span>▼</span>\r\n                </button>\r\n                {isOpen && (\r\n                    <div className=\"dropdown-menu\">\r\n                        {availableSeasons.map((season) => (\r\n                            <div\r\n                                key={season}\r\n                                className={`dropdown-item ${currentSeason === season ? 'active' : ''}`}\r\n                                onClick={() => {\r\n                                    setCurrentSeason(season);\r\n                                    setIsOpen(false);\r\n                                }}\r\n                            >\r\n                                {season}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"mainDiv\">\r\n                {isLoggedIn && (\r\n                    <div className=\"movie-row\" id=\"movie-row-Home\">\r\n                        <div className=\"centreraCards\">\r\n                            <div className=\"componentDiv\">\r\n                                <h3 className=\"msTitel\">\r\n                                    {metadata?.Title || seriesName} ⭐{metadata?.imdbRating}\r\n                                </h3>\r\n\r\n                                <ul className=\"tablist\">\r\n                                    {['Episodes', 'Suggested', 'Details'].map((tab) => (\r\n                                        <li\r\n                                            key={tab}\r\n                                            className={activeTab === tab ? 'active' : ''}\r\n                                            onClick={() => setActiveTab(tab)}\r\n                                        >\r\n                                            {tab}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n\r\n                                {activeTab === 'Episodes' && (\r\n                                    <>\r\n                                        <div className=\"season-select-wrapper\">\r\n                                            <SeasonDropdown\r\n                                                availableSeasons={availableSeasons}\r\n                                                currentSeason={currentSeason}\r\n                                                setCurrentSeason={setCurrentSeason}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"cards\" id=\"episodeCards\">\r\n                                            {episodes\r\n                                                .sort((a, b) => {\r\n                                                    const getEpNum = (title) => {\r\n                                                        const match = title.match(/^(\\d+)[. -]?/);\r\n                                                        return match ? parseInt(match[1], 10) : 0;\r\n                                                    };\r\n                                                    return getEpNum(a.title) - getEpNum(b.title);\r\n                                                })\r\n                                                .map((episode) => (\r\n                                                    <div\r\n                                                        className=\"movie-card\"\r\n                                                        key={episode.path}\r\n                                                        onClick={() =>\r\n                                                            navigate(`/watch?path=${encodeURIComponent(episode.path)}`)\r\n                                                        }\r\n                                                    >\r\n                                                        <div className=\"hover-area\">\r\n                                                            <div className=\"image-container\">\r\n                                                                <img\r\n                                                                    src={`${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(seriesName)}.jpg`}\r\n                                                                    alt={episode.title}\r\n                                                                />\r\n                                                                <span className=\"movieTitle\">{episode.title}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n\r\n                                {activeTab === 'Suggested' && (\r\n                                    <div className=\"cards\" id=\"suggestedCards\">\r\n                                        {suggestedSeries.length === 0 ? (\r\n                                            <p>No suggestions found.</p>\r\n                                        ) : (\r\n                                            suggestedSeries.map((s) => (\r\n                                                <div\r\n                                                    key={s.folder}\r\n                                                    className=\"movie-card\"\r\n                                                    onClick={() =>\r\n                                                        (window.location.href = `/series/${encodeURIComponent(s.folder)}`)\r\n                                                    }\r\n                                                >\r\n                                                    <div className=\"hover-area\">\r\n                                                        <img\r\n                                                            src={`${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(s.folder)}.jpg`}\r\n                                                            alt={s.title || s.folder}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {activeTab === 'Details' && (\r\n                                    <div className=\"details\">\r\n                                        <div className=\"details-wrapper\">\r\n                                            <div className=\"plot\">\r\n                                                <p className=\"detailsTitle\">Plot:</p>\r\n                                                <p>{metadata?.Plot}</p>\r\n                                            </div>\r\n                                            <div className=\"genre\">\r\n                                                <div className=\"detailsDiv\">\r\n                                                    <p className=\"detailsTitle\">Released:</p>\r\n                                                    <p>{metadata?.Released}</p>\r\n                                                </div>\r\n                                                <p className=\"detailsTitle\">Genre:</p>\r\n                                                <p>{metadata?.Genre}</p>\r\n                                            </div>\r\n                                            <div className=\"starring\">\r\n                                                <div className=\"detailsDiv\">\r\n                                                    <p className=\"detailsTitle\">Director:</p>\r\n                                                    <p>{metadata?.Director}</p>\r\n                                                </div>\r\n                                                <div className=\"detailsDiv\">\r\n                                                    <p className=\"detailsTitle\">Starring:</p>\r\n                                                    <div>\r\n                                                        {metadata?.Actors?.split(',').map((actor, i) => (\r\n                                                            <p key={i}>{actor.trim()}</p>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"detailsDiv\">\r\n                                                    <p className=\"detailsTitle\">Awards:</p>\r\n                                                    <p>{metadata?.Awards}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default renderSeriesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}