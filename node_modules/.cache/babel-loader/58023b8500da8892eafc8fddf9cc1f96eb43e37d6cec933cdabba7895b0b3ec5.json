{"ast":null,"code":"var _jsxFileName = \"D:\\\\Erkflix\\\\src\\\\Frontend\\\\SeriesPage.js\",\n  _s2 = $RefreshSig$();\n// src/components/SeriesPage.js\nimport { useAuth } from '../authContext';\nimport { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport api from '../Api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SeriesPage() {\n  _s2();\n  var _s = $RefreshSig$(),\n    _metadata$Actors;\n  const {\n    isLoggedIn\n  } = useAuth();\n  const {\n    seriesName\n  } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [episodes, setEpisodes] = useState([]);\n  const [availableSeasons, setAvailableSeasons] = useState([]);\n  const [currentSeason, setCurrentSeason] = useState('');\n  const [activeTab, setActiveTab] = useState('Episodes');\n  const [suggestedSeries, setSuggestedSeries] = useState([]);\n\n  // Store all episodes grouped by season\n  const [seasonMap, setSeasonMap] = useState({});\n  useEffect(() => {\n    if (!seriesName) return;\n    const fetchMetadata = async () => {\n      try {\n        const res = await api.get(`/api/series-metadata/${encodeURIComponent(seriesName)}`);\n        const data = res.data;\n        setMetadata(data);\n        if (!res.ok) throw new Error('Metadata not found');\n        setMetadata(data);\n      } catch (err) {\n        console.error('❌ Failed to fetch series metadata:', err);\n      }\n    };\n    const fetchSeasons = async () => {\n      try {\n        const res = await api.get(`/api/series/${encodeURIComponent(seriesName)}`);\n        const data = res.data;\n        const grouped = {};\n        for (const {\n          season,\n          episodes\n        } of data.seasons) {\n          grouped[season] = episodes;\n        }\n        setSeasonMap(grouped);\n        const allSeasons = Object.keys(grouped);\n        setAvailableSeasons(allSeasons);\n        setCurrentSeason(allSeasons[0]);\n        setEpisodes(grouped[allSeasons[0]]);\n      } catch (err) {\n        console.error('❌ Failed to fetch seasons:', err);\n      }\n    };\n    fetchMetadata();\n    fetchSeasons();\n  }, [seriesName]);\n  useEffect(() => {\n    if (!(metadata !== null && metadata !== void 0 && metadata.Genre)) return;\n    const token = localStorage.getItem('token');\n    const fetchSuggested = async () => {\n      try {\n        const res = await api.get('/api/series-metadata');\n        const allMetadata = res.data;\n        const currentGenres = metadata.Genre.split(',').map(g => g.trim().toLowerCase());\n        const suggestions = Object.entries(allMetadata).filter(([folder, data]) => {\n          if (folder === seriesName) return false;\n          if (!data.Genre) return false;\n          const otherGenres = data.Genre.split(',').map(g => g.trim().toLowerCase());\n          return currentGenres.some(g => otherGenres.includes(g));\n        }).map(([folder, data]) => ({\n          folder,\n          title: data.Title,\n          poster: data.Poster\n        }));\n        setSuggestedSeries(suggestions);\n      } catch (err) {\n        console.error('❌ Error fetching suggested series:', err);\n      }\n    };\n    fetchSuggested();\n  }, [metadata, seriesName]);\n  useEffect(() => {\n    if (currentSeason && seasonMap[currentSeason]) {\n      setEpisodes(seasonMap[currentSeason]);\n    }\n  }, [currentSeason, seasonMap]);\n  function SeasonDropdown({\n    availableSeasons,\n    currentSeason,\n    setCurrentSeason\n  }) {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const dropdownRef = useRef();\n\n    // Close dropdown when clicking outside\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"season-dropdown\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        onClick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentSeason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: availableSeasons.map(season => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dropdown-item ${currentSeason === season ? 'active' : ''}`,\n          onClick: () => {\n            setCurrentSeason(season);\n            setIsOpen(false);\n          },\n          children: season\n        }, season, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n  _s(SeasonDropdown, \"uhOyve9TWk+bvhPJTPlaMsUEQAY=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        id: \"movie-row-Home\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centreraCards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"componentDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"msTitel\",\n                children: [(metadata === null || metadata === void 0 ? void 0 : metadata.Title) || seriesName, \" \\u2B50\", metadata === null || metadata === void 0 ? void 0 : metadata.imdbRating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"tablist\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeTab === 'Episodes' ? 'active' : '',\n                  onClick: () => setActiveTab('Episodes'),\n                  children: \"Episodes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeTab === 'Suggested' ? 'active' : '',\n                  onClick: () => setActiveTab('Suggested'),\n                  children: \"Suggested\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeTab === 'Details' ? 'active' : '',\n                  onClick: () => setActiveTab('Details'),\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), activeTab === 'Episodes' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"season-select-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(SeasonDropdown, {\n                    availableSeasons: availableSeasons,\n                    currentSeason: currentSeason,\n                    setCurrentSeason: setCurrentSeason\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cards\",\n                  id: \"episodeCards\",\n                  children: episodes.sort((a, b) => {\n                    const getEpNum = title => {\n                      const match = title.match(/^(\\d+)[. -]?/); // Match \"01\", \"1.\", \"1 -\", etc.\n                      return match ? parseInt(match[1], 10) : 0;\n                    };\n                    return getEpNum(a.title) - getEpNum(b.title);\n                  }).map(episode => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movie-card\",\n                    onClick: () => {\n                      setSelectedMovie({\n                        title: episode.title,\n                        path: episode.path,\n                        seriesName\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"hover-area\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"image-container\",\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(seriesName)}.jpg`,\n                          alt: episode.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"movieTitle\",\n                          children: episode.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 61\n                    }, this)\n                  }, episode.path, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true), activeTab === 'Suggested' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards\",\n                id: \"suggestedCards\",\n                children: suggestedSeries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No suggestions found.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this) : suggestedSeries.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-card\",\n                  onClick: () => window.location.href = `/series/${encodeURIComponent(s.folder)}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hover-area\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(s.folder)}.jpg`,\n                      alt: s.title || s.folder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 57\n                  }, this)\n                }, s.folder, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this), activeTab === 'Details' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"plot\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Plot:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Plot\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 90\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"genre\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detailsDiv\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"detailsTitle\",\n                        children: \"Released:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 81\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: metadata === null || metadata === void 0 ? void 0 : metadata.Released\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 122\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detailsTitle\",\n                      children: \"Genre:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: metadata === null || metadata === void 0 ? void 0 : metadata.Genre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"starring\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detailsDiv\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"detailsTitle\",\n                        children: \"Director:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 81\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: metadata === null || metadata === void 0 ? void 0 : metadata.Director\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 122\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detailsDiv\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"detailsTitle\",\n                        children: \"Starring:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: metadata === null || metadata === void 0 ? void 0 : (_metadata$Actors = metadata.Actors) === null || _metadata$Actors === void 0 ? void 0 : _metadata$Actors.split(',').map((actor, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: actor.trim()\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 260,\n                          columnNumber: 65\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detailsDiv\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"detailsTitle\",\n                        children: \"Awards:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: metadata === null || metadata === void 0 ? void 0 : metadata.Awards\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), selectedMovie && /*#__PURE__*/_jsxDEV(VideoOverlay, {\n            path: selectedMovie.path,\n            onClose: () => setSelectedMovie(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s2(SeriesPage, \"zGgceMv/xSBYQ1kz1fnfTwuKfIk=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = SeriesPage;\nfunction VideoOverlay({\n  path = '',\n  onClose\n}) {\n  if (!path) return null;\n  const videoUrl = `${api.defaults.baseURL}/api/stream/file?path=${encodeURIComponent(path)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        autoPlay: true,\n        className: \"video-player\",\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 9\n  }, this);\n}\n_c2 = VideoOverlay;\nvar _c, _c2;\n$RefreshReg$(_c, \"SeriesPage\");\n$RefreshReg$(_c2, \"VideoOverlay\");","map":{"version":3,"names":["useAuth","useState","useRef","useEffect","useParams","Header","api","jsxDEV","_jsxDEV","Fragment","_Fragment","SeriesPage","_s2","_s","$RefreshSig$","_metadata$Actors","isLoggedIn","seriesName","selectedMovie","setSelectedMovie","metadata","setMetadata","episodes","setEpisodes","availableSeasons","setAvailableSeasons","currentSeason","setCurrentSeason","activeTab","setActiveTab","suggestedSeries","setSuggestedSeries","seasonMap","setSeasonMap","fetchMetadata","res","get","encodeURIComponent","data","ok","Error","err","console","error","fetchSeasons","grouped","season","seasons","allSeasons","Object","keys","Genre","token","localStorage","getItem","fetchSuggested","allMetadata","currentGenres","split","map","g","trim","toLowerCase","suggestions","entries","filter","folder","otherGenres","some","includes","title","Title","poster","Poster","SeasonDropdown","isOpen","setIsOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","imdbRating","sort","a","b","getEpNum","match","parseInt","episode","path","src","defaults","baseURL","alt","length","s","window","location","href","Plot","Released","Director","Actors","actor","i","Awards","VideoOverlay","onClose","_c","videoUrl","controls","autoPlay","type","_c2","$RefreshReg$"],"sources":["D:/Erkflix/src/Frontend/SeriesPage.js"],"sourcesContent":["// src/components/SeriesPage.js\r\nimport { useAuth } from '../authContext';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport api from '../Api';\r\n\r\nexport default function SeriesPage() {\r\n    const { isLoggedIn } = useAuth();\r\n    const { seriesName } = useParams();\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n    const [metadata, setMetadata] = useState(null);\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const [availableSeasons, setAvailableSeasons] = useState([]);\r\n    const [currentSeason, setCurrentSeason] = useState('');\r\n    const [activeTab, setActiveTab] = useState('Episodes');\r\n    const [suggestedSeries, setSuggestedSeries] = useState([]);\r\n\r\n    // Store all episodes grouped by season\r\n    const [seasonMap, setSeasonMap] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!seriesName) return;\r\n\r\n        const fetchMetadata = async () => {\r\n            try {\r\n                const res = await api.get(`/api/series-metadata/${encodeURIComponent(seriesName)}`);\r\n                const data = res.data;\r\n                setMetadata(data);\r\n                if (!res.ok) throw new Error('Metadata not found');\r\n                setMetadata(data);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch series metadata:', err);\r\n            }\r\n        };\r\n\r\n        const fetchSeasons = async () => {\r\n            try {\r\n                const res = await api.get(`/api/series/${encodeURIComponent(seriesName)}`);\r\n                const data = res.data;\r\n\r\n                const grouped = {};\r\n                for (const { season, episodes } of data.seasons) {\r\n                    grouped[season] = episodes;\r\n                }\r\n                setSeasonMap(grouped);\r\n\r\n                const allSeasons = Object.keys(grouped);\r\n                setAvailableSeasons(allSeasons);\r\n                setCurrentSeason(allSeasons[0]);\r\n                setEpisodes(grouped[allSeasons[0]]);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch seasons:', err);\r\n            }\r\n        };\r\n\r\n        fetchMetadata();\r\n        fetchSeasons();\r\n    }, [seriesName]);\r\n\r\n    useEffect(() => {\r\n        if (!metadata?.Genre) return;\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        const fetchSuggested = async () => {\r\n            try {\r\n                const res = await api.get('/api/series-metadata');\r\n                const allMetadata = res.data;\r\n\r\n                const currentGenres = metadata.Genre.split(',').map(g => g.trim().toLowerCase());\r\n\r\n                const suggestions = Object.entries(allMetadata)\r\n                    .filter(([folder, data]) => {\r\n                        if (folder === seriesName) return false;\r\n                        if (!data.Genre) return false;\r\n                        const otherGenres = data.Genre.split(',').map(g => g.trim().toLowerCase());\r\n                        return currentGenres.some(g => otherGenres.includes(g));\r\n                    })\r\n                    .map(([folder, data]) => ({\r\n                        folder,\r\n                        title: data.Title,\r\n                        poster: data.Poster\r\n                    }));\r\n                setSuggestedSeries(suggestions);\r\n            } catch (err) {\r\n                console.error('❌ Error fetching suggested series:', err);\r\n            }\r\n        };\r\n\r\n        fetchSuggested();\r\n    }, [metadata, seriesName]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentSeason && seasonMap[currentSeason]) {\r\n            setEpisodes(seasonMap[currentSeason]);\r\n        }\r\n    }, [currentSeason, seasonMap]);\r\n\r\n    function SeasonDropdown({ availableSeasons, currentSeason, setCurrentSeason }) {\r\n        const [isOpen, setIsOpen] = useState(false);\r\n        const dropdownRef = useRef();\r\n\r\n        // Close dropdown when clicking outside\r\n        useEffect(() => {\r\n            const handleClickOutside = (event) => {\r\n                if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                    setIsOpen(false);\r\n                }\r\n            };\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }, []);\r\n\r\n        return (\r\n            <div className=\"season-dropdown\" ref={dropdownRef}>\r\n                <button\r\n                    className=\"dropdown-toggle\"\r\n                    onClick={() => setIsOpen(!isOpen)}\r\n                >\r\n                    <span>{currentSeason}</span>\r\n                    <span>▼</span>\r\n                </button>\r\n                {isOpen && (\r\n                    <div className=\"dropdown-menu\">\r\n                        {availableSeasons.map((season) => (\r\n                            <div\r\n                                key={season}\r\n                                className={`dropdown-item ${currentSeason === season ? 'active' : ''}`}\r\n                                onClick={() => {\r\n                                    setCurrentSeason(season);\r\n                                    setIsOpen(false);\r\n                                }}\r\n                            >\r\n                                {season}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"mainDiv\">\r\n                {isLoggedIn && (\r\n                    <div className='movie-row' id='movie-row-Home'>\r\n                        <>\r\n                            <div className=\"centreraCards\">\r\n                                <div className=\"componentDiv\">\r\n                                    <h3 className=\"msTitel\">{metadata?.Title || seriesName} ⭐{metadata?.imdbRating}</h3>\r\n                                    <ul className='tablist'>\r\n                                        <li\r\n                                            className={activeTab === 'Episodes' ? 'active' : ''}\r\n                                            onClick={() => setActiveTab('Episodes')}\r\n                                        >\r\n                                            Episodes\r\n                                        </li>\r\n                                        <li\r\n                                            className={activeTab === 'Suggested' ? 'active' : ''}\r\n                                            onClick={() => setActiveTab('Suggested')}\r\n                                        >\r\n                                            Suggested\r\n                                        </li>\r\n                                        <li\r\n                                            className={activeTab === 'Details' ? 'active' : ''}\r\n                                            onClick={() => setActiveTab('Details')}\r\n                                        >\r\n                                            Details\r\n                                        </li>\r\n                                    </ul>\r\n                                    {activeTab === 'Episodes' && (\r\n                                        <>\r\n                                            <div className=\"season-select-wrapper\">\r\n                                                <SeasonDropdown\r\n                                                    availableSeasons={availableSeasons}\r\n                                                    currentSeason={currentSeason}\r\n                                                    setCurrentSeason={setCurrentSeason}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"cards\" id=\"episodeCards\">\r\n                                                {episodes\r\n                                                    .sort((a, b) => {\r\n                                                        const getEpNum = (title) => {\r\n                                                            const match = title.match(/^(\\d+)[. -]?/); // Match \"01\", \"1.\", \"1 -\", etc.\r\n                                                            return match ? parseInt(match[1], 10) : 0;\r\n                                                        };\r\n                                                        return getEpNum(a.title) - getEpNum(b.title);\r\n                                                    })\r\n                                                    .map((episode) => (\r\n                                                        <div\r\n                                                            className=\"movie-card\"\r\n                                                            key={episode.path}\r\n                                                            onClick={() => {\r\n                                                                setSelectedMovie({\r\n                                                                    title: episode.title,\r\n                                                                    path: episode.path,\r\n                                                                    seriesName,\r\n                                                                });\r\n                                                            }}\r\n                                                        >\r\n                                                            <div className=\"hover-area\">\r\n                                                                <div className=\"image-container\">\r\n                                                                    <img\r\n                                                                        src={`${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(seriesName)}.jpg`}\r\n                                                                        alt={episode.title}\r\n                                                                    />\r\n                                                                    <span className=\"movieTitle\">{episode.title}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {activeTab === 'Suggested' && (\r\n                                        <div className=\"cards\" id='suggestedCards'>\r\n                                            {suggestedSeries.length === 0 ? (\r\n                                                <p>No suggestions found.</p>\r\n                                            ) : (\r\n                                                suggestedSeries.map((s) => (\r\n                                                    <div\r\n                                                        key={s.folder}\r\n                                                        className=\"movie-card\"\r\n                                                        onClick={() => window.location.href = `/series/${encodeURIComponent(s.folder)}`}\r\n                                                    >\r\n                                                        <div className=\"hover-area\">\r\n                                                            <img\r\n                                                                src={`${api.defaults.baseURL}/seriesPosters/${encodeURIComponent(s.folder)}.jpg`}\r\n                                                                alt={s.title || s.folder}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {activeTab === 'Details' && (\r\n                                        <div className='details'>\r\n                                            <div className=\"details-wrapper\">\r\n                                                <div className='plot'>\r\n                                                    <p className='detailsTitle'>Plot:</p><p>{metadata?.Plot}</p></div>\r\n                                                <div className='genre'>\r\n                                                    <div className='detailsDiv'><p className='detailsTitle'>Released:</p><p>{metadata?.Released}</p></div>\r\n                                                    <p className='detailsTitle'>Genre:</p><p>{metadata?.Genre}</p>\r\n                                                </div>\r\n                                                <div className='starring'>\r\n                                                    <div className='detailsDiv'><p className='detailsTitle'>Director:</p><p>{metadata?.Director}</p></div>\r\n                                                    <div className='detailsDiv'>\r\n                                                        <p className='detailsTitle'>Starring:</p>\r\n                                                        <div>\r\n                                                            {metadata?.Actors?.split(',').map((actor, i) => (\r\n                                                                <p key={i}>{actor.trim()}</p>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='detailsDiv'>\r\n                                                        <p className='detailsTitle'>Awards:</p>\r\n                                                        <p>{metadata?.Awards}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {selectedMovie && (\r\n                                <VideoOverlay\r\n                                    path={selectedMovie.path}\r\n                                    onClose={() => setSelectedMovie(null)}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction VideoOverlay({ path = '', onClose }) {\r\n    if (!path) return null;\r\n\r\n    const videoUrl = `${api.defaults.baseURL}/api/stream/file?path=${encodeURIComponent(path)}`;\r\n\r\n    return (\r\n        <div className=\"video-overlay\">\r\n            <div className=\"video-wrapper\">\r\n                <button className=\"close-button\" onClick={onClose}>✖</button>\r\n                <video controls autoPlay className=\"video-player\">\r\n                    <source src={videoUrl} type=\"video/mp4\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}